I"ÈG<p>Continuing to explore R and SQLâ€™s usefulness when it comes to HMIS data I decided to start posting HMIS problems and R and SQL solutions.</p>

<p>Problem:Â One of our Emergency Solutions Grant (ESG) funders requires the subrecipients to produce a report of all the participants which receive services from the shelter. Â This requirement was written into the contract the ESG funders have with the subrecipient. Â This worked somewhat in 2011 when it was implemented, however, it is 2016 and the data which is queried against to produce the report is well over 1.3 million entries. Â These data are generated <em>every</em>Â time a participant checki in a shelter for meal, bed, or to sit. Â It is unlikely this data set will ever get smaller. Â In short, the data have grown beyond the report serverÂ currently provided by ourÂ software vendor. Â Since the query is handled server-side it has resulted in the subrecipients being unable to reliablyÂ meet the requirement.</p>

<p>Solution:Â Â <br />
In attempt to circumvent the server-side query, Iâ€™ve written a R and SQL script which takes two data files:</p>

<ol>
  <li>Point of Service (PoS)</li>
  <li>Demographic and HUD Assessment data (enrolledInTCES)</li>
</ol>

<p>These data were pulled using the software report services, but without any query. Â This seems to allow bypassing the server-side bottle-neck. Â The script then merges the data, formats it, and aggregates it for the final report.</p>

<p>The report should be something which could be run using a batch file, so I hope to deploy it to the subrecipients. Â Then, with a little training, it should allow them to continue to produce the report for the funders.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">nameOfMonth</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">readline</span><span class="p">(</span><span class="s2">"Provide the month for which the data was pulled: \n"</span><span class="p">)</span><span class="w">
</span><span class="n">nameOfAgency</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">readline</span><span class="p">(</span><span class="s2">"Provide the name of your agency: \n"</span><span class="p">)</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="s2">"sqldf"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="s2">"readxl"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Load data</span><span class="w">
</span><span class="n">enrolledInTCES</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_excel</span><span class="p">(</span><span class="s2">"Attachment III Date for Oct and Dec 2016 -- DRC Program.xlsx"</span><span class="p">)</span><span class="w">
</span><span class="n">PoS</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read_excel</span><span class="p">(</span><span class="s2">"DRC PoS Check In for November 2016.xlsx"</span><span class="p">)</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">enrolledInTCES</span><span class="p">)[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"peid"</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">PoS</span><span class="p">)[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"peid"</span><span class="w">

</span><span class="c1"># Check for duplicates</span><span class="w">
</span><span class="n">PoS</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT peid FROM PoS"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Join allPos and enrolledInTCES</span><span class="w">
</span><span class="n">attachmentIIIClientData</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">merge</span><span class="p">(</span><span class="n">PoS</span><span class="p">,</span><span class="w"> </span><span class="n">enrolledInTCES</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="o">=</span><span class="s2">"peid"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Make the disability column easier to work with.</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">attachmentIIIClientData</span><span class="p">)[</span><span class="m">8</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"ethnicity"</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">attachmentIIIClientData</span><span class="p">)[</span><span class="m">9</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"tmi"</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">attachmentIIIClientData</span><span class="p">)[</span><span class="m">10</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"race"</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">attachmentIIIClientData</span><span class="p">)[</span><span class="m">11</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"disability"</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">attachmentIIIClientData</span><span class="p">)[</span><span class="m">12</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"FSI"</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">attachmentIIIClientData</span><span class="p">)[</span><span class="m">13</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"gender"</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">attachmentIIIClientData</span><span class="p">)[</span><span class="m">14</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"HHSize"</span><span class="w">

</span><span class="c1"># Replaces all NAs with 0</span><span class="w">
</span><span class="n">attachmentIIIClientData</span><span class="p">[</span><span class="nf">is.na</span><span class="p">(</span><span class="n">attachmentIIIClientData</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">0</span><span class="w">
</span><span class="c1"># Create annual income column</span><span class="w">
</span><span class="n">attachmentIIIClientData</span><span class="o">$</span><span class="n">annualIncome</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">attachmentIIIClientData</span><span class="o">$</span><span class="n">tmi</span><span class="w"> </span><span class="o">*</span><span class="w"> </span><span class="m">12</span><span class="w">
</span><span class="c1"># Remove decimals.</span><span class="w">
</span><span class="n">attachmentIIIClientData</span><span class="o">$</span><span class="n">annualIncome</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.integer</span><span class="p">(</span><span class="n">attachmentIIIClientData</span><span class="o">$</span><span class="n">annualIncome</span><span class="p">)</span><span class="w">

</span><span class="c1"># AMI Matrix</span><span class="w">
</span><span class="c1"># N = Number of People in a Household</span><span class="w">
</span><span class="c1">#  &lt;30%AMI	  30%-50% AMI	 51-80% AMI	 &gt;80% AMI</span><span class="w">
</span><span class="c1"># 1&lt;$14600	  1&lt;$24300	   1&lt;$38850	  1&gt;$38850</span><span class="w">
</span><span class="c1"># 2&lt;$16650	  2&lt;$27800	   2&lt;$44400	  2&gt;$44400</span><span class="w">
</span><span class="c1"># 3&lt;$18750	  3&lt;$31250	   3&lt;$49950	  3&gt;$49950</span><span class="w">
</span><span class="c1"># 4&lt;$20800	  4&lt;$34700	   4&lt;$55500	  4&gt;$55500</span><span class="w">
</span><span class="c1"># 5&lt;$22500	  5&lt;$37500	   5&lt;$59950	  5&gt;$59950</span><span class="w">
</span><span class="c1"># 6&lt;$24150	  6&lt;$40300	   6&lt;$64400	  6&gt;$64400</span><span class="w">
</span><span class="c1"># 7&lt;$25800	  7&lt;$43050	   7&lt;$68850	  7&gt;$68850</span><span class="w">
</span><span class="c1"># 8&lt;$27500	  8&lt;$45850     8&lt;$73300 	8&gt;$73300</span><span class="w">

</span><span class="n">ami</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT 

              (
              SUM (CASE WHEN annualIncome &lt; 14600 AND HHSize == 1 THEN 1 ELSE 0 END) +
              SUM (CASE WHEN annualIncome &lt; 16650 AND HHSize == 2 THEN 1 ELSE 0 END) +
              SUM (CASE WHEN annualIncome &lt; 18750 AND HHSize == 3 THEN 1 ELSE 0 END) +
              SUM (CASE WHEN annualIncome &lt; 20800 AND HHSize == 4 THEN 1 ELSE 0 END) +
              SUM (CASE WHEN annualIncome &lt; 22500 AND HHSize == 5 THEN 1 ELSE 0 END) +
              SUM (CASE WHEN annualIncome &lt; 24150 AND HHSize == 6 THEN 1 ELSE 0 END) +
              SUM (CASE WHEN annualIncome &lt; 25800 AND HHSize == 7 THEN 1 ELSE 0 END) +
              SUM (CASE WHEN annualIncome &lt; 27500 AND HHSize &gt; 7 THEN 1 ELSE 0 END)) as '&lt;30% AMI',

              (
              SUM(CASE WHEN annualIncome &lt; 24300 AND HHSize == 1 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &lt; 27800 AND HHSize == 2 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &lt; 31250 AND HHSize == 3 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &lt; 34700 AND HHSize == 4 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &lt; 37500 AND HHSize == 5 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &lt; 40300 AND HHSize == 6 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &lt; 43050 AND HHSize == 7 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &lt; 45850 AND HHSize &gt; 7 THEN 1 ELSE 0 END)) as '30-50% AMI',

              (
              SUM(CASE WHEN annualIncome &lt; 38850 AND HHSize == 1 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &lt; 44400 AND HHSize == 2 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &lt; 49950 AND HHSize == 3 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &lt; 55500 AND HHSize == 4 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &lt; 59950 AND HHSize == 5 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &lt; 64400 AND HHSize == 6 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &lt; 68850 AND HHSize == 7 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &lt; 73300 AND HHSize &gt; 7 THEN 1 ELSE 0 END)) as '51-80% AMI',

              (
              SUM(CASE WHEN annualIncome &gt; 38850 AND HHSize == 1 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &gt; 44400 AND HHSize == 2 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &gt; 49950 AND HHSize == 3 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &gt; 55500 AND HHSize == 4 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &gt; 59950 AND HHSize == 5 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &gt; 64400 AND HHSize == 6 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &gt; 68850 AND HHSize == 7 THEN 1 ELSE 0 END) +
              SUM(CASE WHEN annualIncome &gt; 73300 AND HHSize &gt; 7 THEN 1 ELSE 0 END)) as '&gt;80% AMI'

              FROM attachmentIIIClientData"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Remove duplicate counts.</span><span class="w">
</span><span class="n">ami</span><span class="o">$</span><span class="s1">'30-50% AMI'</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="p">(</span><span class="n">ami</span><span class="o">$</span><span class="s1">'30-50% AMI'</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">ami</span><span class="o">$</span><span class="s1">'&lt;30% AMI'</span><span class="p">)</span><span class="w">
</span><span class="n">ami</span><span class="o">$</span><span class="s1">'51-80% AMI'</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="p">(</span><span class="n">ami</span><span class="o">$</span><span class="s1">'51-80% AMI'</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">ami</span><span class="o">$</span><span class="s1">'&lt;30% AMI'</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="n">ami</span><span class="o">$</span><span class="s1">'30-50% AMI'</span><span class="p">)</span><span class="w">

</span><span class="c1"># Aggregates data for Attachment III.</span><span class="w">
</span><span class="n">attachmentIIIAggregate</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT 

                 COUNT(peid) as 'Total Participants',
                 SUM(CASE WHEN disability = 'Yes' THEN 1 ELSE 0 END) as DisabledCount,

                 SUM(CASE WHEN age &lt; 5 THEN 1 ELSE 0 END) as 'Under 5',
                 SUM(CASE WHEN age &gt; 4 AND age &lt; 13 THEN 1 ELSE 0 END) as '5 to 12',
                 SUM(CASE WHEN age &gt; 12 AND age &lt; 18 THEN 1 ELSE 0 END) as '13 to 17',
                 SUM(CASE WHEN age &gt; 17 AND age &lt; 25 THEN 1 ELSE 0 END) as '18 to 24',
                 SUM(CASE WHEN age &gt; 24 AND age &lt; 35 THEN 1 ELSE 0 END) as '25 to 34',
                 SUM(CASE WHEN age &gt; 34 AND age &lt; 45 THEN 1 ELSE 0 END) as '35 to 44',
                 SUM(CASE WHEN age &gt; 44 AND age &lt; 55 THEN 1 ELSE 0 END) as '45 to 54',
                 SUM(CASE WHEN age &gt; 54 AND age &lt; 62 THEN 1 ELSE 0 END) as '55 to 61',
                 SUM(CASE WHEN age &gt; 61 THEN 1 ELSE 0 END) as '60+',

                 SUM(CASE WHEN race  = 'Black or African American' THEN 1 ELSE 0 END) as 'Black or African American',
                 SUM(CASE WHEN race  = 'White' THEN 1 ELSE 0 END) as 'White',
                 SUM(CASE WHEN race  = 'American Indian or Alaska Native' THEN 1 ELSE 0 END) as 'American Indian or Alaska Native',
                 SUM(CASE WHEN race  = 'Asian' THEN 1 ELSE 0 END) as 'Asian',
                 SUM(CASE WHEN race  = 'Native Hawaiian or Other Pacific Islander' THEN 1 ELSE 0 END) as 'Native Hawaiian or Other Pacific Islander',
                 SUM(CASE WHEN race = 'Black or African American' OR
                 race = 'White' OR
                 race = 'American Indian or Alaska Native' OR
                 race = 'Asian' OR
                 race = 'Native Hawaiian or Other Pacific Islander'
                 THEN 0 ELSE 1 END) as 'Other',

                 SUM(CASE WHEN ethnicity  = 'Non-Hispanic/Non-Latino' THEN 1 ELSE 0 END) as 'Non-Hispanic/Non-Latino',
                 SUM(CASE WHEN ethnicity  = 'Hispanic/Latino' THEN 1 ELSE 0 END) as 'Hispanic/Latino',

                 SUM(CASE WHEN gender = 'Male' THEN 1 ELSE 0 END) as 'Male',
                 SUM(CASE WHEN gender = 'Female' THEN 1 ELSE 0 END) as 'Female'
                 FROM attachmentIIIClientData"</span><span class="p">)</span><span class="w">

</span><span class="n">attachmentIIIAggregate</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT * FROM attachmentIIIAggregate LEFT JOIN ami "</span><span class="p">)</span><span class="w">

</span><span class="n">aggregateFileNameString</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">nameOfMonth</span><span class="p">,</span><span class="w"> </span><span class="s2">"_"</span><span class="p">,</span><span class="w"> </span><span class="n">nameOfAgency</span><span class="p">,</span><span class="w"> </span><span class="s2">"_attachment_III_aggregate.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">write.csv</span><span class="p">(</span><span class="n">attachmentIIIAggregate</span><span class="p">,</span><span class="w"> </span><span class="n">file</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">aggregateFileNameString</span><span class="p">)</span><span class="w">

</span><span class="n">clientDataFileNameString</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">nameOfMonth</span><span class="p">,</span><span class="s2">"_"</span><span class="p">,</span><span class="w"> </span><span class="n">nameOfAgency</span><span class="p">,</span><span class="w"> </span><span class="s2">"_attachment_III_client_data.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">write.csv</span><span class="p">(</span><span class="n">attachmentIIIClientData</span><span class="p">,</span><span class="w"> </span><span class="n">file</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">clientDataFileNameString</span><span class="p">)</span></code></pre></figure>
:ET