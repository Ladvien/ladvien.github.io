I"ʨ<p>This is my attempt to write SQL against the HMIS 5.1 CSVs.  It includes:</p>

<ol>
  <li>Identifying Chronically Homeless (CHP) Participants enterprise Wide</li>
  <li>Identifying Veterans (Vets) enterprise wide</li>
  <li>Sorting CHPs and Vets to identify those who’ve exited the literal homelessness and where they went.</li>
  <li>Sorting CHPs and Vets to identify those are still in the literal homelessness</li>
  <li>Filtering to Active Participants in Projects using Entry / Exit</li>
  <li>Filtering to Active Participants in Projects using NBN</li>
  <li>Getting total NBN stays by participant</li>
</ol>

<p>To actualy get anything done through writing SQL against these CSVs, one will need the HMIS Vendor CSV Specifications</p>

<p><a href="http://www.hudhdx.info/VendorResources.aspx">Current HMIS CSV Specifications</a></p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="s2">"sqldf"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="s2">"tcltk"</span><span class="p">)</span><span class="w">

</span><span class="n">startDate</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"2015-10-01"</span><span class="w">
</span><span class="n">endDate</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"2016-09-30"</span><span class="w">

</span><span class="n">affiliation</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Affiliation.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Client.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">disabilities</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Disabilities.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">employementEducation</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"EmploymentEducation.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">enrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Enrollment.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">exit</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Exit.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">export</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Export.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">funder</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Funder.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">healthAndDv</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"HealthAndDV.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">incomeBenefits</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"IncomeBenefits.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">inventory</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Inventory.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">organization</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Organization.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">project</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Project.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">projectCoc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"ProjectCoC.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">services</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Services.csv"</span><span class="p">)</span><span class="w">
</span><span class="n">site</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="s2">"Site.csv"</span><span class="p">)</span><span class="w">

</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1">##### Get those Impairing Disability ########</span><span class="w">
</span><span class="c1">#############################################</span><span class="w">
</span><span class="n">disabledAndImpairedDf</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT PersonalID 
                              FROM disabilities 
                              WHERE DisabilityResponse = 1 
                              AND IndefiniteAndImpairs = 1"</span><span class="p">)</span><span class="w">

</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1">##### Get those with Disabling Condition ###</span><span class="w">
</span><span class="c1">#############################################</span><span class="w">
</span><span class="n">disablingCondition</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT PersonalID 
                            FROM activeEnrollment 
                            WHERE DisablingCondition = 1"</span><span class="p">)</span><span class="w">

</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1">##### Get Active Participants #1 ############</span><span class="w">
</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1"># Compares enrollment.ProjectEntryID and exit.ProjectEntryID.  </span><span class="w">
</span><span class="c1"># Should take all records where there is no matching exit.</span><span class="w">

</span><span class="n">activeEnrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT * 
                          FROM enrollment a 
                          LEFT JOIN exit b 
                          ON a.ProjectEntryID=b.ProjectEntryID 
                          WHERE b.ProjectEntryID IS NULL"</span><span class="p">)</span><span class="w">
</span><span class="n">activeEnrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">activeEnrollment</span><span class="p">)</span><span class="w">

</span><span class="c1">## ^^^^^^ Doesn't work. ^^^^^^</span><span class="w">
</span><span class="c1"># Rhis will not work for us, since many shelters are</span><span class="w">
</span><span class="c1"># not entering HUD Exit Assessments.</span><span class="w">

</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1">##### Get Active Participants #2 ############</span><span class="w">
</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1"># For activeEnrollment, take the MAX(EntryDate) from enrollment and</span><span class="w">
</span><span class="c1"># MAX(ExitDate) FROM exit.  Then, compare the dates, if the entry date is later</span><span class="w">
</span><span class="c1"># then the exit date, then the participant is still active in the project.</span><span class="w">
</span><span class="c1"># if the ExitDate is after the entry, then the participant is no longer in the project.</span><span class="w">
</span><span class="n">mostRecentEnrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *, MAX(EntryDate) As 'MostRecentEntryDate'
                              FROM enrollment
                              GROUP BY PersonalID"</span><span class="p">)</span><span class="w">

</span><span class="n">mostRecentExit</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *, MAX(ExitDate) As 'MostRecentExitDate'
                              FROM exit
                              GROUP BY PersonalID"</span><span class="p">)</span><span class="w">

</span><span class="n">mostRecentEntryAndExit</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.PersonalID, a.MostRecentEntryDate, b.MostRecentExitDate, a.ProjectEntryID, b.ExitID
                                  FROM mostRecentEnrollment a 
                                  LEFT JOIN mostRecentExit b
                                  ON a.PersonalID=b.PersonalID
                                "</span><span class="p">)</span><span class="w">

</span><span class="n">activeParticipants</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT PersonalID, MostRecentEntryDate, MostRecentExitDate, ProjectEntryID, ExitID
                              FROM mostRecentEntryAndExit
                                WHERE (MostRecentEntryDate &gt; MostRecentExitDate)
                                OR MostRecentExitDate IS NULL
                            "</span><span class="p">)</span><span class="w">

</span><span class="n">dayLongParticipants</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT PersonalID, MostRecentEntryDate, MostRecentExitDate, ProjectEntryID, ExitID
                              FROM mostRecentEntryAndExit
                              WHERE (MostRecentEntryDate = MostRecentExitDate)
                            "</span><span class="p">)</span><span class="w">

</span><span class="n">inactiveParticipants</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT PersonalID, MostRecentEntryDate, MostRecentExitDate, ProjectEntryID
                              FROM mostRecentEntryAndExit
                              WHERE (MostRecentEntryDate &lt; MostRecentExitDate)
                            "</span><span class="p">)</span><span class="w">

</span><span class="c1">## ^^^^^^ Grr...Doesn't work. ^^^^^^</span><span class="w">
</span><span class="c1"># Unfortunately, this wont work because of participants exited from a project</span><span class="w">
</span><span class="c1"># then enrolled in a different project on the same day.</span><span class="w">
</span><span class="c1"># Looks like I'm getting active participants through method one, filtering out</span><span class="w">
</span><span class="c1"># the TCES, and then adding them back in.  </span><span class="w">
</span><span class="c1"># Wait, the TCES:PNS and TCES:TSA should both be pulling only participants</span><span class="w">
</span><span class="c1"># who've stayed in a bed.  Maybe it's the DRC which is responsible for the high total?</span><span class="w">
</span><span class="c1"># I'll re-pull the data excluding the DRC and see if that drastically lowers the number.</span><span class="w">

</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1">##### Get Active Participants #3 ############</span><span class="w">
</span><span class="c1">############## Incomplete ###################</span><span class="w">
</span><span class="c1">#############################################</span><span class="w">

</span><span class="c1"># My next thought is to break out NBN data, where Exits are collected.  Once removed, then the activeEnrollment formula</span><span class="w">
</span><span class="c1"># should work, since everything else is Entry / Exit.  I'll then use the Services NBN dates to determine if someone is</span><span class="w">
</span><span class="c1"># still active in the shelters.</span><span class="w">

</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1">##### Get Active NBN Participants  ##########</span><span class="w">
</span><span class="c1">###### And their total NBN stays ############</span><span class="w">
</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1"># 200 = NBN Service</span><span class="w">
</span><span class="c1"># http://www.hudhdx.info/VendorResources.aspx</span><span class="w">
</span><span class="n">clientNbn</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT * 
                   FROM services
                   WHERE RecordType = 200 
                   "</span><span class="p">)</span><span class="w"> 

</span><span class="n">str</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="s2">"SELECT * FROM clientNbn WHERE DateProvided &gt; '"</span><span class="p">,</span><span class="w"> </span><span class="n">startDate</span><span class="p">,</span><span class="w"> </span><span class="s2">"' AND DateProvided &lt; '"</span><span class="p">,</span><span class="w"> </span><span class="n">endDate</span><span class="p">,</span><span class="s2">"'"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w">

</span><span class="n">activeClientNbn</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="n">str</span><span class="p">)</span><span class="w">
</span><span class="n">distinctActiveClientNbn</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT(PersonalID) FROM activeClientNbn"</span><span class="p">)</span><span class="w">

</span><span class="n">clientNbnDuration</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT PersonalID, COUNT(DateProvided) As 'Total NBN Stays'
                            FROM clientNbn
                            GROUP BY PersonalID
                           "</span><span class="p">)</span><span class="w">

</span><span class="n">activeNbnClientWithTotalNbnDuration</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.PersonalID, b.'Total NBN Stays'
                                             FROM distinctActiveClientNbn a
                                             INNER JOIN clientNbnDuration b
                                             ON a.PersonalID=b.PersonalID
                                             ORDER BY b.'Total NBN Stays' DESC
                                             "</span><span class="p">)</span><span class="w">

</span><span class="c1">#################</span><span class="w">

</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1">##### Length-of-Stay ########################</span><span class="w">
</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1"># Participants who meet the length-of-stay in homelessness requirement</span><span class="w">
</span><span class="c1"># Either through four or more occurences with cumulative duration exceeding a year</span><span class="w">
</span><span class="c1"># Or a consequtive year.</span><span class="w">
</span><span class="c1">#                 113 = "12 Months"</span><span class="w">
</span><span class="c1">#                 114 = "More than 12 Months"</span><span class="w">
</span><span class="n">chronicityDf</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT PersonalID, 'Yes' As 'Meets LOS'
                               FROM activeEnrollment
                               WHERE (TimesHomelessPastThreeYears = 4
                                    AND (
                                          MonthsHomelessPastThreeYears = 113
                                          OR MonthsHomelessPastThreeYears = 114)
                                        )
                               OR (CAST(JULIANDAY('now') - JULIANDAY(DateToStreetESSH) AS Integer) &gt; 364
                                   AND (DateToStreetESSH != '') 
                                  )
                               "</span><span class="p">)</span><span class="w">

</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1">##### Chronically Homeless ##################</span><span class="w">
</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1"># Take the distinct PersonalIDs of individuals who meet both chronicity</span><span class="w">
</span><span class="c1"># and disabling condition.</span><span class="w">
</span><span class="n">chronicallyHomeless</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT(a.PersonalID)
                              FROM chronicityDf a
                              INNER JOIN disablingCondition b
                              ON a.PersonalID=b.PersonalID
                             "</span><span class="p">)</span><span class="w">

</span><span class="c1"># Get client info for chronically homeless.</span><span class="w">
</span><span class="n">chClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *, 'Yes' As 'Chronically Homeless' 
                  FROM client a 
                  INNER JOIN chronicallyHomeless b 
                  ON a.PersonalID=b.PersonalID
                  "</span><span class="p">)</span><span class="w">
</span><span class="n">chClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">chClient</span><span class="p">)</span><span class="w">

</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1">##### Chronically Homeless Veterans #########</span><span class="w">
</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1"># Finds the total Chronically Homeless Veterans in the data set.</span><span class="w">
</span><span class="n">chronicallyHomelessVeterans</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT * 
                                     FROM chClient 
                                     WHERE VeteranStatus = 1
                                     "</span><span class="p">)</span><span class="w">

</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1">##### Exit Destination Information ##########</span><span class="w">
</span><span class="c1">############## Incomplete ###################</span><span class="w">
</span><span class="c1">#############################################</span><span class="w">
</span><span class="c1"># Take only the most recent exit assessment</span><span class="w">
</span><span class="n">clientLastExit</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT PersonalID, MAX(ExitDate), Destination
                        FROM exit
                        GROUP BY PersonalID
                        "</span><span class="p">)</span><span class="w">

</span><span class="n">clientLastExit</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">destinationToReadable</span><span class="p">(</span><span class="n">clientLastExit</span><span class="p">)</span><span class="w">

</span><span class="n">clientsBrief</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT PersonalID, FirstName, LastName, SSN FROM client"</span><span class="p">)</span><span class="w">
</span><span class="n">clientsBriefExit</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT * 
                          FROM clientsBrief a 
                          INNER JOIN clientLastExit b
                          ON a.PersonalID=b.PersonalID
                        "</span><span class="p">)</span><span class="w">

</span><span class="c1"># Target day is 1-26-2017</span><span class="w">

</span><span class="c1"># activeRecords &lt;- activeFilter(df, "occStartDate", "occEndDate", "2017-01-23", '2017-01-26')</span><span class="w">
</span><span class="n">activeFilter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">dateVector1</span><span class="p">,</span><span class="w"> </span><span class="n">dateVector2</span><span class="p">,</span><span class="w"> </span><span class="n">beginRange</span><span class="p">,</span><span class="w"> </span><span class="n">endRange</span><span class="p">){</span><span class="w">
  </span><span class="n">df</span><span class="p">[</span><span class="nf">is.na</span><span class="p">(</span><span class="n">df</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">""</span><span class="w">
  </span><span class="n">df</span><span class="p">[</span><span class="n">dateVector1</span><span class="p">,]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.character</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="n">dateVector1</span><span class="p">,])</span><span class="w">
  </span><span class="n">df</span><span class="p">[</span><span class="n">dateVector2</span><span class="p">,]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.character</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="n">dateVector2</span><span class="p">,])</span><span class="w">
  </span><span class="n">str</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="s2">"SELECT * FROM df WHERE ("</span><span class="p">,</span><span class="w"> </span><span class="n">dateVector1</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt; '"</span><span class="p">,</span><span class="w"> </span><span class="n">endRange</span><span class="p">,</span><span class="w"> </span><span class="s2">"' AND "</span><span class="p">,</span><span class="w"> </span><span class="n">dateVector2</span><span class="p">,</span><span class="w"> </span><span class="s2">" = '') OR ("</span><span class="p">,</span><span class="w"> </span><span class="n">dateVector1</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt; '"</span><span class="p">,</span><span class="w"> </span><span class="n">endRange</span><span class="p">,</span><span class="w"> </span><span class="s2">"' AND "</span><span class="p">,</span><span class="w"> </span><span class="n">dateVector2</span><span class="p">,</span><span class="w"> </span><span class="s2">" &gt; '"</span><span class="p">,</span><span class="w"> </span><span class="n">beginRange</span><span class="p">,</span><span class="w"> </span><span class="s2">"')"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w">
  </span><span class="n">sqldf</span><span class="p">(</span><span class="n">str</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">makeDestinationReadable</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="w"> </span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">exit</span><span class="w">
  </span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *, Destination as 'ReadableDestination' FROM df"</span><span class="p">)</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"1"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Emergency shelter, including hotel or motel paid for with emergency shelter voucher"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"2"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Transitional housing for homeless persons (including homeless youth)"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"3"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Permanent housing for formerly homeless persons (such as: CoC project; or HUD legacy programs; or HOPWA PH)"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"4"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Psychiatric hospital or other psychiatric facility"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"5"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Substance abuse treatment facility or detox center"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"6"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Hospital or other residential non-psychiatric medical facility"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"7"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Jail, prison or juvenile detention facility"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"8"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Client doesn’t know"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"9"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Client refused"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"10"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Rental by client, no ongoing housing subsidy"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"11"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Owned by client, no ongoing housing subsidy"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"12"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Staying or living with family, temporary tenure (e.g., room, apartment or house)"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"13"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Staying or living with friends, temporary tenure (e.g., room apartment or house)"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"14"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Hotel or motel paid for without emergency shelter voucher"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"15"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Foster care home or foster care group home"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"16"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Place not meant for habitation (e.g., a vehicle, an abandoned building, bus/train/subway station/airport or anywhere outside)"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"17"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Other"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"18"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Safe Haven"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"19"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Rental by client, with VASH housing subsidy"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"20"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Rental by client, with other ongoing housing subsidy"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"21"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Owned by client, with ongoing housing subsidy"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"22"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Staying or living with family, permanent tenure"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"23"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Staying or living with friends, permanent tenure"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"24"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Deceased"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"25"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Long-term care facility or nursing home"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"26"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Moved from one HOPWA funded project to HOPWA PH"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"27"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Moved from one HOPWA funded project to HOPWA TH"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"28"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Rental by client, with GPD TIP housing subsidy"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"29"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Residential project or halfway house with no homeless criteria"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"30"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"No exit interview completed"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"99"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Data not collected"</span><span class="w">

  </span><span class="n">df</span><span class="w">
</span><span class="p">}</span><span class="w">
    </span></code></pre></figure>
:ET