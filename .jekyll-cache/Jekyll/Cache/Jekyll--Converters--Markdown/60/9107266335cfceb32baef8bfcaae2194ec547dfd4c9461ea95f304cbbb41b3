I"/<p>This is a build out of TX-601’s Coordinated Entry By-Name List.  The report is written using SQLDF inside of an R environment.</p>

<h2 id="homebase-function">Homebase Function</h2>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">homebase</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="w">
  </span><span class="n">hmisDataPath</span><span class="p">,</span><span class="w">
  </span><span class="n">vispdatDataPath</span><span class="p">,</span><span class="w">
  </span><span class="n">staffInfoDataPath</span><span class="p">,</span><span class="w">
  </span><span class="n">executionPath</span><span class="p">,</span><span class="w">
  </span><span class="n">hmisFunctionsFilePath</span><span class="p">,</span><span class="w">
  </span><span class="n">viSpdat2DataPath</span><span class="p">,</span><span class="w">
  </span><span class="n">clientContactInfoPath</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">

  </span><span class="n">library</span><span class="p">(</span><span class="s2">"tcltk"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Load the weights for progress bar</span><span class="w">
  </span><span class="n">loadingPackagesIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">2</span><span class="w">
  </span><span class="n">loadingHMISDataIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">10</span><span class="w">
  </span><span class="n">addDisabilitiesIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">5</span><span class="w">
  </span><span class="n">householdIdIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">4</span><span class="w">
  </span><span class="n">calculatingAgeIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">1</span><span class="w">
  </span><span class="n">gettingEnrollmentsIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">10</span><span class="w">
  </span><span class="n">gettingStaffInfoIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">5</span><span class="w">
  </span><span class="n">calculatingCHIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">10</span><span class="w">
  </span><span class="n">addVispdatIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">5</span><span class="w">
  </span><span class="n">getFamilyWithChildIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">5</span><span class="w">
  </span><span class="n">loadServicesIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">15</span><span class="w">
  </span><span class="n">nbnStaysIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">5</span><span class="w">
  </span><span class="n">outreachContactsIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">5</span><span class="w">
    </span><span class="n">outreachAndNbnCountIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">5</span><span class="w">
    </span><span class="n">clientContactinfoIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">3</span><span class="w">
  </span><span class="n">makeHmisCodesReadableIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">2</span><span class="w">
  </span><span class="n">formatHomebaseIncrement</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">1</span><span class="w">
  
  </span><span class="c1"># Find the progress bar max.</span><span class="w">
  </span><span class="n">total</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="p">(</span><span class="n">loadingPackagesIncrement</span><span class="w"> </span><span class="o">+</span><span class="w">
              </span><span class="n">loadingHMISDataIncrement</span><span class="w"> </span><span class="o">+</span><span class="w">
              </span><span class="n">addDisabilitiesIncrement</span><span class="w"> </span><span class="o">+</span><span class="w">
              </span><span class="n">householdIdIncrement</span><span class="w"> </span><span class="o">+</span><span class="w">
              </span><span class="n">calculatingAgeIncrement</span><span class="w"> </span><span class="o">+</span><span class="w">
              </span><span class="n">gettingEnrollmentsIncrement</span><span class="w"> </span><span class="o">+</span><span class="w">
              </span><span class="n">gettingStaffInfoIncrement</span><span class="w"> </span><span class="o">+</span><span class="w">
              </span><span class="n">calculatingCHIncrement</span><span class="w"> </span><span class="o">+</span><span class="w">
              </span><span class="n">addVispdatIncrement</span><span class="w"> </span><span class="o">+</span><span class="w">
              </span><span class="n">getFamilyWithChildIncrement</span><span class="w"> </span><span class="o">+</span><span class="w">
              </span><span class="n">loadServicesIncrement</span><span class="w"> </span><span class="o">+</span><span class="w">
              </span><span class="n">nbnStaysIncrement</span><span class="w"> </span><span class="o">+</span><span class="w">
              </span><span class="n">outreachAndNbnCountIncrement</span><span class="w"> </span><span class="o">+</span><span class="w">
              </span><span class="n">makeHmisCodesReadableIncrement</span><span class="w"> </span><span class="o">+</span><span class="w">
              </span><span class="n">formatHomebaseIncrement</span><span class="w"> </span><span class="o">+</span><span class="w">
              </span><span class="n">clientContactinfoIncrement</span><span class="w">
  </span><span class="p">)</span><span class="w">
      </span><span class="c1"># Initialize progress bar</span><span class="w">
  </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="w">
  </span><span class="n">pb</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tkProgressBar</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Homebase Function"</span><span class="p">,</span><span class="w"> </span><span class="n">min</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="p">,</span><span class="w">
                      </span><span class="n">max</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">total</span><span class="p">,</span><span class="w"> </span><span class="n">width</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">300</span><span class="p">)</span><span class="w">
  
  </span><span class="c1">###### START ##########</span><span class="w">
  </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Loading Packages"</span><span class="p">)</span><span class="w">

  </span><span class="c1"># There needs to be a lot of allocated memory for Java for</span><span class="w">
  </span><span class="c1"># XLConnect to work.</span><span class="w">
    </span><span class="n">options</span><span class="p">(</span><span class="n">java.parameters</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"-Xmx14336m"</span><span class="p">)</span><span class="w"> </span><span class="c1">## memory set to 14 GB</span><span class="w">

  </span><span class="n">library</span><span class="p">(</span><span class="n">sqldf</span><span class="p">)</span><span class="w">
  </span><span class="n">library</span><span class="p">(</span><span class="n">XLConnect</span><span class="p">)</span><span class="w">
  </span><span class="n">library</span><span class="p">(</span><span class="n">xlsx</span><span class="p">)</span><span class="w">


  </span><span class="c1"># Load the HMIS functions.</span><span class="w">
  </span><span class="n">source</span><span class="p">(</span><span class="n">hmisFunctionsFilePath</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Return to execution path.</span><span class="w">
  </span><span class="n">setwd</span><span class="p">(</span><span class="n">executionPath</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Update progress bar</span><span class="w">
  </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">loadingPackagesIncrement</span><span class="w">
  </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Loading HMIS Data"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Load HMIS Data</span><span class="w">
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">loadClient</span><span class="p">(</span><span class="n">hmisDataPath</span><span class="p">)</span><span class="w">
  </span><span class="n">enrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">loadEnrollment</span><span class="p">(</span><span class="n">hmisDataPath</span><span class="p">)</span><span class="w">
  </span><span class="n">disabilities</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">loadDisabilities</span><span class="p">(</span><span class="n">hmisDataPath</span><span class="p">)</span><span class="w">
  </span><span class="n">exit</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">loadExit</span><span class="p">(</span><span class="n">hmisDataPath</span><span class="p">)</span><span class="w">
  </span><span class="n">project</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">loadProject</span><span class="p">(</span><span class="n">hmisDataPath</span><span class="p">)</span><span class="w">
  </span><span class="n">enrollmentCoc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">loadEnrollmentCoc</span><span class="p">(</span><span class="n">hmisDataPath</span><span class="p">)</span><span class="w">

  </span><span class="c1"># Return to execution path.</span><span class="w">
  </span><span class="n">setwd</span><span class="p">(</span><span class="n">executionPath</span><span class="p">)</span><span class="w">
  
  </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">loadingHMISDataIncrement</span><span class="w">
  </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Getting Disabilities"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Takes the Disabilities.csv and breaks out the disabilities reported</span><span class="w">
  </span><span class="c1"># for each participants into individual elements with binary resposnes.</span><span class="w">
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">addDisabilityInfoToClient</span><span class="p">(</span><span class="n">client</span><span class="p">,</span><span class="w"> </span><span class="n">disabilities</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Update progress bar</span><span class="w">
  </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">addDisabilitiesIncrement</span><span class="w">
  </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Getting Household IDs"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Gets the PersonalIDs of participants with a HUD Entry or Update in last 90 days.</span><span class="w">
  </span><span class="n">enrollmentCoc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">getMostRecentRecordsPerId</span><span class="p">(</span><span class="n">enrollmentCoc</span><span class="p">,</span><span class="w"> </span><span class="s2">"PersonalID"</span><span class="p">,</span><span class="w"> </span><span class="s2">"DateCreated"</span><span class="p">)</span><span class="w">
  </span><span class="n">enrollmentCoc</span><span class="o">$</span><span class="n">DateCreated</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.character</span><span class="p">(</span><span class="n">enrollmentCoc</span><span class="o">$</span><span class="n">DateCreated</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Get Household IDs from EnrollmentCoc.csv</span><span class="w">
  </span><span class="n">client_HHIDs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT a.PersonalID, b.HouseholdID
                  FROM client a
                  LEFT JOIN enrollmentCoc b
                  ON a.PersonalID=b.PersonalID
                  WHERE HouseholdID != 'NA'
                  "</span><span class="p">)</span><span class="w">

  </span><span class="n">client_HHIDs</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT PersonalID, MAX(HouseholdID) As 'HouseholdID' FROM client_HHIDs GROUP BY PersonalID"</span><span class="p">)</span><span class="w">

  </span><span class="c1"># Update progress bar</span><span class="w">
  </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">householdIdIncrement</span><span class="w">
  </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Calculating Age"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Calculate age</span><span class="w">
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT *, (DATE('NOW') - DATE(DOB)) As 'Age' FROM client"</span><span class="p">)</span><span class="w">
  
  </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">calculatingAgeIncrement</span><span class="w">
  </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Getting Enrollments"</span><span class="p">)</span><span class="w">

  </span><span class="c1"># Filters to most recent HUD Assessment per participant</span><span class="w">
  </span><span class="n">df1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">getMostRecentRecordsPerId</span><span class="p">(</span><span class="n">enrollment</span><span class="p">,</span><span class="w"> </span><span class="s2">"PersonalID"</span><span class="p">,</span><span class="w"> </span><span class="s2">"EntryDate"</span><span class="p">)</span><span class="w">

  </span><span class="c1">## Adds a 'MaxEntryDate' flag to enrollment</span><span class="w">
  </span><span class="c1">#enrollment &lt;- sqldf("SELECT a.*, b.MaxEntryDate</span><span class="w">
                      </span><span class="c1">#FROM enrollment a</span><span class="w">
                      </span><span class="c1">#LEFT JOIN df1 b</span><span class="w">
                      </span><span class="c1">#ON a.ProjectEntryID=b.ProjectEntryID</span><span class="w">
                      </span><span class="c1">#")</span><span class="w">


    </span><span class="c1"># Adds a 'MaxEntryDate' flag to enrollment</span><span class="w">
    </span><span class="n">enrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.MaxEntryDate
                      FROM enrollment a
                      LEFT JOIN df1 b
                      ON a.ProjectEntryID=b.ProjectEntryID
                      WHERE b.MaxEntryDate = 'Yes'
                      "</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Get Project Info for Enrollment</span><span class="w">
  </span><span class="n">enrollmentCoc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">addProjectInfoToEnrollment</span><span class="p">(</span><span class="n">enrollmentCoc</span><span class="p">,</span><span class="w"> </span><span class="n">project</span><span class="p">)</span><span class="w">
  
  </span><span class="n">df3</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT PersonalID, DateCreated As 'MostRecentHUDAssess', UserID As 'StaffID', ProjectName, ProjectType
               FROM enrollmentCoc"</span><span class="p">)</span><span class="w">
  </span><span class="n">df3</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">makeProjectTypeReadable</span><span class="p">(</span><span class="n">df3</span><span class="p">)</span><span class="w">
  </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">gettingStaffInfoIncrement</span><span class="w">
  </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Calculating Chronically Homeless"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Adds a ChronicallyHomeless flag</span><span class="w">
  </span><span class="n">df4</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">addChronicallyHomelessFlagToClient</span><span class="p">(</span><span class="n">client</span><span class="p">,</span><span class="w"> </span><span class="n">df1</span><span class="p">)</span><span class="w">
  </span><span class="c1"># Adds a ActiveInPh flag</span><span class="w">
  </span><span class="n">df5</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">getClientsInPH</span><span class="p">(</span><span class="n">loadEnrollment</span><span class="p">(</span><span class="n">hmisDataPath</span><span class="p">),</span><span class="w"> </span><span class="n">exit</span><span class="p">,</span><span class="w"> </span><span class="n">project</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Returns flags to clientDf</span><span class="w">
  </span><span class="n">targetClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT a.*, b.'ActiveInPh', c.EntryDate
                        FROM df4 a
                        LEFT JOIN df5 b
                        ON a.PersonalID=b.PersonalID
                        LEFT JOIN enrollment c
                        ON a.PersonalID=c.PersonalID
                        "</span><span class="p">)</span><span class="w">

  </span><span class="n">colnames</span><span class="p">(</span><span class="n">targetClient</span><span class="p">)[</span><span class="n">which</span><span class="p">(</span><span class="n">colnames</span><span class="p">(</span><span class="n">targetClient</span><span class="p">)</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"EntryDate"</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"RecentHUDEntryDate"</span><span class="w">
  
  </span><span class="c1"># Load staff information</span><span class="w">
  </span><span class="n">staffInfo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">readWorksheetFromFile</span><span class="p">(</span><span class="n">staffInfoDataPath</span><span class="p">,</span><span class="w"> </span><span class="n">sheet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">startRow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w">
  </span><span class="n">colnames</span><span class="p">(</span><span class="n">staffInfo</span><span class="p">)[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"StaffID"</span><span class="w">
  </span><span class="n">staffInfo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT StaffID, Name, Email FROM staffInfo"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Find the staff information for who completed each HUD Assessment.</span><span class="w">
  </span><span class="n">df7</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.Name As 'StaffName', b.Email As 'StaffEmail'
               FROM df3 a
               LEFT JOIN staffInfo b
               ON a.StaffID=b.StaffID
               "</span><span class="p">)</span><span class="w">
  </span><span class="n">remove</span><span class="p">(</span><span class="n">list</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"staffInfo"</span><span class="p">))</span><span class="w">
  
  </span><span class="c1"># Add the Staff and Project information back to client list.</span><span class="w">
  </span><span class="n">targetClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.MostRecentHUDAssess, b.StaffName, b.StaffEmail, b.ProjectName As 'LastProgramInContact', b.ReadableProjectType As 'LastProjectTypeContacted'
                        FROM targetClient a
                        LEFT JOIN df7 b
                        ON a.PersonalID=b.PersonalID
                        "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">targetClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">targetClient</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Cleanup</span><span class="w">
  </span><span class="n">remove</span><span class="p">(</span><span class="n">list</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"df4"</span><span class="p">,</span><span class="w"> </span><span class="s2">"df3"</span><span class="p">,</span><span class="w"> </span><span class="s2">"df5"</span><span class="p">,</span><span class="w"> </span><span class="s2">"df1"</span><span class="p">,</span><span class="w"> </span><span class="s2">"enrollmentCoc"</span><span class="p">))</span><span class="w">
  
  </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">calculatingCHIncrement</span><span class="w">
  </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Adding VI-SPDAT"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Load VI-SPDAT information</span><span class="w">
  </span><span class="n">viSpdat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">readWorksheetFromFile</span><span class="p">(</span><span class="n">vispdatDataPath</span><span class="p">,</span><span class="w"> </span><span class="n">sheet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">startRow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w">
  </span><span class="n">viSpdat2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">readWorksheetFromFile</span><span class="p">(</span><span class="n">viSpdat2DataPath</span><span class="p">,</span><span class="w"> </span><span class="n">sheet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">startRow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w">

  </span><span class="c1"># Clean up VI-SPDAT1 formatting</span><span class="w">
  </span><span class="n">colnames</span><span class="p">(</span><span class="n">viSpdat</span><span class="p">)[</span><span class="m">6</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"DateOfVISPDAT"</span><span class="w">
  </span><span class="n">viSpdat</span><span class="o">$</span><span class="n">DateOfVISPDAT</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.character</span><span class="p">(</span><span class="n">viSpdat</span><span class="o">$</span><span class="n">DateOfVISPDAT</span><span class="p">)</span><span class="w">
  </span><span class="n">viSpdat</span><span class="o">$</span><span class="n">Participant.Enterprise.Identifier</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"-"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">viSpdat</span><span class="o">$</span><span class="n">Participant.Enterprise.Identifier</span><span class="p">)</span><span class="w">
  </span><span class="n">viSpdat</span><span class="o">$</span><span class="n">Family.Enterprise.Identifier</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"-"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">viSpdat</span><span class="o">$</span><span class="n">Family.Enterprise.Identifier</span><span class="p">)</span><span class="w">
  </span><span class="n">viSpdat</span><span class="o">$</span><span class="n">Family.Enterprise.Identifier</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"\\{"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">viSpdat</span><span class="o">$</span><span class="n">Family.Enterprise.Identifier</span><span class="p">)</span><span class="w">
    </span><span class="n">viSpdat</span><span class="o">$</span><span class="n">Family.Enterprise.Identifier</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"\\}"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">viSpdat</span><span class="o">$</span><span class="n">Family.Enterprise.Identifier</span><span class="p">)</span><span class="w">
    </span><span class="n">colnames</span><span class="p">(</span><span class="n">viSpdat</span><span class="p">)[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"PersonalID"</span><span class="w">

  </span><span class="c1"># Clean up VI-SPDAT2 formatting</span><span class="w">
  </span><span class="n">viSpdat2</span><span class="o">$</span><span class="n">DateOfVISPDAT</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.character</span><span class="p">(</span><span class="n">viSpdat2</span><span class="o">$</span><span class="n">DateOfVISPDAT</span><span class="p">)</span><span class="w">
  </span><span class="n">viSpdat2</span><span class="o">$</span><span class="n">PersonalID</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"-"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">viSpdat2</span><span class="o">$</span><span class="n">PersonalID</span><span class="p">)</span><span class="w">
    
    </span><span class="c1"># Get most recent VI-SPDAT per client.</span><span class="w">
  </span><span class="n">viSpdat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">getMostRecentRecordsPerId</span><span class="p">(</span><span class="n">viSpdat</span><span class="p">,</span><span class="w"> </span><span class="s2">"PersonalID"</span><span class="p">,</span><span class="w"> </span><span class="s2">"DateOfVISPDAT"</span><span class="p">)</span><span class="w">
  </span><span class="n">viSpdat2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">getMostRecentRecordsPerId</span><span class="p">(</span><span class="n">viSpdat2</span><span class="p">,</span><span class="w"> </span><span class="s2">"PersonalID"</span><span class="p">,</span><span class="w"> </span><span class="s2">"DateOfVISPDAT"</span><span class="p">)</span><span class="w">

    </span><span class="c1"># Shape VI-SPDAT to look like VI-SPDAT 2</span><span class="w">
    </span><span class="n">viSpdat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT PersonalID, DateOfVISPDAT As 'DateOfVISPDAT', '' As VISPDATTotalFamilyScore, '' As VISPDATTotalYouthScore, ScoreVISPDAT As 'VISPDATTotalIndividualScore', 'Individual' As TypeOfViSpdat FROM viSpdat"</span><span class="p">)</span><span class="w">
    </span><span class="n">viSpdat2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT PersonalID, DateOfVISPDAT, VISPDATTotalFamilyScore, VISPDATTotalYouthScore, VISPDATTotalIndividualScore, TypeOfViSpdat FROM viSpdat2"</span><span class="p">)</span><span class="w">

    </span><span class="n">allVispdat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rbind</span><span class="p">(</span><span class="n">viSpdat</span><span class="p">,</span><span class="w"> </span><span class="n">viSpdat2</span><span class="p">)</span><span class="w">

    </span><span class="c1"># Get max between new and old VI-SPDAT</span><span class="w">
    </span><span class="n">allVispdat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">getMostRecentRecordsPerId</span><span class="p">(</span><span class="n">allVispdat</span><span class="p">,</span><span class="w"> </span><span class="s2">"PersonalID"</span><span class="p">,</span><span class="w"> </span><span class="s2">"DateOfVISPDAT"</span><span class="p">)</span><span class="w">

    </span><span class="n">allVispdat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">unique</span><span class="p">(</span><span class="n">allVispdat</span><span class="p">)</span><span class="w">

   
    </span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalIndividualScore</span><span class="p">[</span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalIndividualScore</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">''</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'0'</span><span class="w">
    </span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalFamilyScore</span><span class="p">[</span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalFamilyScore</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">''</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'0'</span><span class="w">
    </span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalYouthScore</span><span class="p">[</span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalYouthScore</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">''</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'0'</span><span class="w">

    </span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalIndividualScore</span><span class="p">[</span><span class="nf">is.na</span><span class="p">(</span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalIndividualScore</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'0'</span><span class="w">
    </span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalFamilyScore</span><span class="p">[</span><span class="nf">is.na</span><span class="p">(</span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalFamilyScore</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'0'</span><span class="w">
    </span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalYouthScore</span><span class="p">[</span><span class="nf">is.na</span><span class="p">(</span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalYouthScore</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s1">'0'</span><span class="w">


    </span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalIndividualScore</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.integer</span><span class="p">(</span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalIndividualScore</span><span class="p">)</span><span class="w">
    </span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalFamilyScore</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.integer</span><span class="p">(</span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalFamilyScore</span><span class="p">)</span><span class="w">
    </span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalYouthScore</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.integer</span><span class="p">(</span><span class="n">allVispdat</span><span class="o">$</span><span class="n">VISPDATTotalYouthScore</span><span class="p">)</span><span class="w">
    
    </span><span class="n">allVispdat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">allVispdat</span><span class="p">)</span><span class="w">
    </span><span class="c1"># Make one column for score.</span><span class="w">
    </span><span class="c1">#allVispdat &lt;- sqldf("SELECT *, CASE </span><span class="w">
                                    </span><span class="c1">#WHEN (VISPDATTotalFamilyScore IS '' </span><span class="w">
                                          </span><span class="c1">#AND VISPDATTotalYouthScore IS '') </span><span class="w">
                                          </span><span class="c1">#THEN VISPDATTotalIndividualScore</span><span class="w">
                                    </span><span class="c1">#WHEN (VISPDATTotalFamilyScore IS '' </span><span class="w">
                                          </span><span class="c1">#AND VISPDATTotalIndividualScore IS '') </span><span class="w">
                                          </span><span class="c1">#THEN VISPDATTotalYouthScore</span><span class="w">
                                          </span><span class="c1">#ELSE VISPDATTotalFamilyScore</span><span class="w">
                                   </span><span class="c1">#END As 'ScoreVISPDAT'</span><span class="w">
                        </span><span class="c1">#FROM allVispdat</span><span class="w">
                        </span><span class="c1">#ORDER BY ScoreVISPDAT DESC</span><span class="w">
                      </span><span class="c1">#")</span><span class="w">

    </span><span class="n">allVispdat</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *, CASE 
                                    WHEN (VISPDATTotalFamilyScore &lt;= VISPDATTotalIndividualScore
                                          AND VISPDATTotalYouthScore &lt;= VISPDATTotalIndividualScore) 
                                          THEN VISPDATTotalIndividualScore
                                    WHEN (VISPDATTotalFamilyScore &lt;= VISPDATTotalYouthScore
                                          AND VISPDATTotalIndividualScore &lt;= VISPDATTotalYouthScore) 
                                          THEN VISPDATTotalYouthScore
                                          ELSE VISPDATTotalFamilyScore
                                   END As 'ScoreVISPDAT'
                        FROM allVispdat
                        ORDER BY ScoreVISPDAT DESC
                      "</span><span class="p">)</span><span class="w">

    </span><span class="n">allVispdat</span><span class="o">$</span><span class="n">ScoreVISPDAT</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.numeric</span><span class="p">(</span><span class="n">allVispdat</span><span class="o">$</span><span class="n">ScoreVISPDAT</span><span class="p">)</span><span class="w">

  </span><span class="n">targetClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">targetClient</span><span class="p">)</span><span class="w">


  </span><span class="c1"># Add VI-SPDAT scores and dates to the client list.</span><span class="w">
  </span><span class="n">targetClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.ScoreVISPDAT, b.DateOfVISPDAT, b.TypeOfVispdat
                        FROM targetClient a
                        LEFT JOIN allVispdat b
                        ON a.PersonalID=b.PersonalID
                        "</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Just in case, make date SQLite friendly.</span><span class="w">
  </span><span class="n">targetClient</span><span class="o">$</span><span class="n">DateOfVISPDAT</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.character</span><span class="p">(</span><span class="n">targetClient</span><span class="o">$</span><span class="n">DateOfVISPDAT</span><span class="p">)</span><span class="w">
  
  </span><span class="n">remove</span><span class="p">(</span><span class="n">list</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"viSpdat"</span><span class="p">,</span><span class="w"> </span><span class="s2">"viSpdat2"</span><span class="p">,</span><span class="w"> </span><span class="s2">"allVispdat"</span><span class="p">))</span><span class="w">
  
  </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">addVispdatIncrement</span><span class="w">
  </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Getting Family with Child"</span><span class="p">)</span><span class="w">

 </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.HouseholdID 
                  FROM client a
                  LEFT JOIN client_HHIDs b 
                  ON a.PersonalID=b.PersonalID"</span><span class="p">)</span><span class="w">
 </span><span class="n">targetClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.HouseholdID 
                  FROM targetClient a
                  LEFT JOIN client_HHIDs b 
                  ON a.PersonalID=b.PersonalID"</span><span class="p">)</span><span class="w">

    </span><span class="n">remove</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w">
    </span><span class="n">remove</span><span class="p">(</span><span class="n">enrollment</span><span class="p">)</span><span class="w">

    </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">loadClient</span><span class="p">(</span><span class="n">hmisDataPath</span><span class="p">)</span><span class="w">
    </span><span class="n">enrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">loadEnrollment</span><span class="p">(</span><span class="n">hmisDataPath</span><span class="p">)</span><span class="w">

    </span><span class="n">family_flag_builder</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT PersonalID, HouseholdID, RelationshipToHoH FROM enrollment"</span><span class="p">)</span><span class="w">

    </span><span class="n">family_flag_builder</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">family_flag_builder</span><span class="p">[</span><span class="o">!</span><span class="nf">is.na</span><span class="p">(</span><span class="n">family_flag_builder</span><span class="o">$</span><span class="n">HouseholdID</span><span class="p">),]</span><span class="w">
    </span><span class="n">family_flag_builder</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT HouseholdID, 
        (CASE WHEN RelationshipToHoH = 1 THEN 'Yes' ELSE 'No' END) As 'Adult', 
        (CASE WHEN RelationshipToHoH = 2 THEN 'Yes' ELSE 'No' END) As 'Child' 
        FROM family_flag_builder"</span><span class="p">)</span><span class="w">
    </span><span class="n">hhids_of_adults</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT HouseholdID, Adult FROM family_flag_builder WHERE Adult = 'Yes'"</span><span class="p">)</span><span class="w">
    </span><span class="n">hhids_of_child</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT HouseholdID, Child FROM family_flag_builder WHERE Child = 'Yes'"</span><span class="p">)</span><span class="w">
    </span><span class="n">family_flag_builder</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.HouseholdID, a.Adult, b.Child
                         FROM hhids_of_adults a
                         INNER JOIN hhids_of_child b
                         ON a.HouseholdID=b.HouseholdID  
                         "</span><span class="p">)</span><span class="w">

    </span><span class="n">family_flag_builder</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT HouseholdID, 'Yes' As FamilyWithChildren FROM family_flag_builder WHERE Adult = 'Yes' AND Child = 'Yes' GROUP BY HouseholdID"</span><span class="p">)</span><span class="w">
   
  </span><span class="c1"># Add the family flag back to the client list.</span><span class="w">
  </span><span class="n">targetClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT a.*, b.FamilyWithChildren
                        FROM targetClient a
                        LEFT JOIN family_flag_builder b
                        ON a.HouseholdID=b.HouseholdID
                        "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">remove</span><span class="p">(</span><span class="n">list</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"family_flag_builder"</span><span class="p">))</span><span class="w">
  
  </span><span class="n">targetClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">targetClient</span><span class="p">)</span><span class="w">
  </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">getFamilyWithChildIncrement</span><span class="w">
  </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Loading Services"</span><span class="p">)</span><span class="w">
  
  
  </span><span class="c1"># Free up some memory before attempting Services.csv</span><span class="w">
  </span><span class="n">remove</span><span class="p">(</span><span class="n">list</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"client"</span><span class="p">,</span><span class="w"> </span><span class="s2">"enrollment"</span><span class="p">,</span><span class="w"> </span><span class="s2">"disabilities"</span><span class="p">,</span><span class="w"> </span><span class="s2">"exit"</span><span class="p">,</span><span class="w"> </span><span class="s2">"project"</span><span class="p">))</span><span class="w">
  
  </span><span class="n">setwd</span><span class="p">(</span><span class="n">hmisDataPath</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Load services -- large files.</span><span class="w">
  </span><span class="n">services</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">loadServices</span><span class="p">()</span><span class="w">
  
  </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">loadServicesIncrement</span><span class="w">
  </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Getting Night-by-Night Stays"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Get all of te NBN service entries.</span><span class="w">
  </span><span class="n">clientNbn</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *
                     FROM services
                     WHERE RecordType = 200
                     "</span><span class="p">)</span><span class="w">
  </span><span class="c1"># Count the number of NBN check-ins per client.  Make sure the date as distinct, due to ETO duplicate bed</span><span class="w">
  </span><span class="c1"># stays when data is pulled using a program-group including two-shelters.</span><span class="w">
  </span><span class="n">daysCheckedInNBN</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT(PersonalID), COUNT (DISTINCT(DateProvided)) As 'NonProgramShelterNights'
                            FROM clientNbn
                            GROUP BY PersonalID
                            "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">nbnStaysIncrement</span><span class="w">
  </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Getting Outreach Contacts"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Get all Outreach Contact services.</span><span class="w">
  </span><span class="n">clientOutreach</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *
                          FROM services
                          WHERE RecordType = 12
                          "</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Count all Outreach Contacts per client.  Count distinct is to get around ETO bug when data is</span><span class="w">
  </span><span class="c1"># pulled using a program group which includes two outreach agencies.</span><span class="w">
  </span><span class="n">outreachContacts</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT(PersonalID), COUNT (DISTINCT(DateProvided)) As 'NumberOutreachContacts'
                            FROM clientOutreach
                            GROUP BY PersonalID
                            "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">outreachContactsIncrement</span><span class="w">
  </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Adding Outreach and NBN Count"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Add NBN stays to client list.</span><span class="w">
  </span><span class="n">targetClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.NonProgramShelterNights
                        FROM targetClient a
                        LEFT JOIN daysCheckedInNBN b
                        ON a.PersonalID=b.PersonalID
                        "</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Add Outreach Contacts to client list.</span><span class="w">
  </span><span class="n">targetClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.NumberOutreachContacts
                        FROM targetClient a
                        LEFT JOIN outreachContacts b
                        ON a.PersonalID=b.PersonalID
                        "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">remove</span><span class="p">(</span><span class="n">list</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"services"</span><span class="p">,</span><span class="w"> </span><span class="s2">"clientOutreach"</span><span class="p">,</span><span class="w"> </span><span class="s2">"daysCheckedInNBN"</span><span class="p">,</span><span class="w"> </span><span class="s2">"clientNbn"</span><span class="p">,</span><span class="w"> </span><span class="s2">"outreachContacts"</span><span class="p">))</span><span class="w">

    </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">outreachAndNbnCountIncrement</span><span class="w">
    </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Add Client Contact Info"</span><span class="p">)</span><span class="w">

  </span><span class="c1"># Add client contact information</span><span class="w">
  </span><span class="n">clientContactInfo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">readWorksheetFromFile</span><span class="p">(</span><span class="n">clientContactInfoPath</span><span class="p">,</span><span class="w"> </span><span class="n">sheet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">startRow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w">
  </span><span class="n">colnames</span><span class="p">(</span><span class="n">clientContactInfo</span><span class="p">)[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"PersonalID"</span><span class="w">
  </span><span class="n">colnames</span><span class="p">(</span><span class="n">clientContactInfo</span><span class="p">)[</span><span class="m">2</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"ProgramStartDate"</span><span class="w">
  </span><span class="n">colnames</span><span class="p">(</span><span class="n">clientContactInfo</span><span class="p">)[</span><span class="m">3</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"ClientEmail"</span><span class="w">
    </span><span class="n">colnames</span><span class="p">(</span><span class="n">clientContactInfo</span><span class="p">)[</span><span class="m">4</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"ClientPhone"</span><span class="w">
    </span><span class="n">clientContactInfo</span><span class="o">$</span><span class="n">PersonalID</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">"-"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">clientContactInfo</span><span class="o">$</span><span class="n">PersonalID</span><span class="p">)</span><span class="w">

  </span><span class="n">clientContactInfo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">getMostRecentRecordsPerId</span><span class="p">(</span><span class="n">clientContactInfo</span><span class="p">,</span><span class="w"> </span><span class="s2">"PersonalID"</span><span class="p">,</span><span class="w"> </span><span class="s2">"ProgramStartDate"</span><span class="p">)</span><span class="w">

  </span><span class="n">targetClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.ClientEmail, b.ClientPhone 
                        FROM targetClient a
                        LEFT JOIN clientContactInfo b
                        ON a.PersonalID=b.PersonalID
                        "</span><span class="p">)</span><span class="w">

  </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">clientContactinfoIncrement</span><span class="w">
  </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Make HMIS Codes Readable"</span><span class="p">)</span><span class="w">
  
  </span><span class="n">setwd</span><span class="p">(</span><span class="n">executionPath</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Make HMIS codes human readable.</span><span class="w">
  </span><span class="n">targetClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">combineRaceColumnsAndMakeReadable</span><span class="p">(</span><span class="n">targetClient</span><span class="p">)</span><span class="w">
  </span><span class="n">targetClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">makeGenderReadable</span><span class="p">(</span><span class="n">targetClient</span><span class="p">)</span><span class="w">
  </span><span class="n">targetClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">makeEthnicityReadable</span><span class="p">(</span><span class="n">targetClient</span><span class="p">)</span><span class="w">
  </span><span class="n">targetClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">makeVeteranStatusReadable</span><span class="p">(</span><span class="n">targetClient</span><span class="p">)</span><span class="w">
  
  
  </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">makeHmisCodesReadableIncrement</span><span class="w">
  </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Format Homebase Dataframe"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Pull and format the client list.</span><span class="w">
  </span><span class="n">homebase_all</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT
                        PersonalID,
                        FirstName,
                        MiddleName,
                        LastName,
                        ClientEmail,
                        ClientPhone,
                        NameSuffix,
                        SSN,
                        DOB,
                        Age,
                        Gender,
                        Race,
                        Ethnicity,
                        VeteranStatus,
                        HouseholdID,
                        ChronicallyHomeless,
                        NumberOutreachContacts,
                        NonProgramShelterNights,
                        RecentHUDEntryDate,
                        MostRecentHUDAssess,
                        FamilyWithChildren,
                        ScoreVISPDAT,
                        TypeOfViSpdat,
                        DateOfVISPDAT,
                        PhysicalDisability,
                        DevelopmentalDisability,
                        ChronicHealthCondition,
                        a.'HIV/AIDS',
                        MentalHealthProblem,
                        SubstanceAbuse,
                        StaffName,
                        StaffEmail,
                        LastProgramInContact,
                        LastProjectTypeContacted,
                        ActiveInPH
                        FROM targetClient a
                        "</span><span class="p">)</span><span class="w">

    </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">pbCounter</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">formatHomebaseIncrement</span><span class="w">
    </span><span class="n">setTkProgressBar</span><span class="p">(</span><span class="n">pb</span><span class="p">,</span><span class="w"> </span><span class="n">pbCounter</span><span class="p">,</span><span class="w"> </span><span class="n">label</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Homebase Complete"</span><span class="p">)</span><span class="w">

    </span><span class="c1"># Clean up</span><span class="w">

    </span><span class="n">close</span><span class="p">(</span><span class="n">pb</span><span class="p">)</span><span class="w">
    </span><span class="n">rm</span><span class="p">(</span><span class="n">list</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">setdiff</span><span class="p">(</span><span class="n">ls</span><span class="p">(),</span><span class="w"> </span><span class="s2">"homebase_all"</span><span class="p">))</span><span class="w">
    </span><span class="c1"># Retun list.</span><span class="w">
    </span><span class="n">homebase_all</span><span class="w">
</span><span class="p">}</span></code></pre></figure>

<h2 id="homebase-report">Homebase Report</h2>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">options</span><span class="p">(</span><span class="n">java.parameters</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"-Xmx14336m"</span><span class="p">)</span><span class="w"> </span><span class="c1">## memory set to 14 GB</span><span class="w">

</span><span class="n">developmentLog</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"REPORT DETAILS -- DO NOT DELETE THIS TAB"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"For development information please visit ladvien.com"</span><span class="p">,</span><span class="w">

                    </span><span class="s2">"5/30/17"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"Added order by for PSH and RRH -- should match operations manual."</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"Changed 90-day filter for VI-SPDAT to only need at least one VI-SPDAT to keep participant in 'active'"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"Added client contact information"</span><span class="p">,</span><span class="w">


                    </span><span class="s2">"5/10/2017"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"Changed EnrollmentCoC max date function to look at DateCreated not InformationDate"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"Changed the Enrollment max date function to look at EntryDate and not DateCreated"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">""</span><span class="p">,</span><span class="w">
                                      
                    </span><span class="s2">"05/07/2017"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"Automated Formatting"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"Added descending on VeteranStatus, FamilyWithChildren, ScoreVISPDAT in respective order."</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"Added Graphic Dashboard"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">""</span><span class="p">,</span><span class="w">
                    
                    </span><span class="s2">"05/07/2017"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"Switched from using Client.DOB -&gt; Age for establishing family to Enrollment.RelationshipToHoH.  This seems to have addressed the families not flagging."</span><span class="p">,</span><span class="w">
                    </span><span class="s2">""</span><span class="p">,</span><span class="w">
                    
                    </span><span class="s2">"03/15/2017"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"Incorporated VI-SPDAT2"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">""</span><span class="p">,</span><span class="w">
                    
                    </span><span class="s2">"02/01/2017"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"Initial Report"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">""</span><span class="w">
                    </span><span class="p">)</span><span class="w">
</span><span class="c1"># Argument guide</span><span class="w">
  </span><span class="c1"># 1 = Name of Report</span><span class="w">
  </span><span class="c1"># 2 = Folder path for HMIS data</span><span class="w">
  </span><span class="c1"># 3 = VI-SPDAT File data</span><span class="w">
  </span><span class="c1"># 4 = Staff Info File data</span><span class="w">
  </span><span class="c1"># 5 = Executing directory path</span><span class="w">

</span><span class="c1"># args &lt;- commandArgs(trailingOnly = TRUE)</span><span class="w">
</span><span class="c1"># nameOfReport &lt;- args[1]</span><span class="w">
</span><span class="c1"># hmisDataPath &lt;- args[2]</span><span class="w">
</span><span class="c1"># vispdatDataPath &lt;- args[3]</span><span class="w">
</span><span class="c1"># staffInfoDataPath &lt;- args[4]</span><span class="w">
</span><span class="c1"># executionPath &lt;- args[5]</span><span class="w">
</span><span class="c1"># viSpdat2DataPath &lt;- args[6]</span><span class="w">
</span><span class="c1"># </span><span class="w">
</span><span class="c1"># outputPath &lt;- executionPath</span><span class="w">
</span><span class="c1"># homebaseFunctionFilePath &lt;- paste(executionPath, "\\Homebase_Function.R", sep ="")</span><span class="w">
</span><span class="c1"># hmisFunctionsFilePath &lt;- paste(executionPath, "\\HMIS_R_Functions.R", sep = "")</span><span class="w">

</span><span class="c1"># PC</span><span class="w">
</span><span class="n">nameOfReport</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Homebase_Report.R"</span><span class="w">
</span><span class="n">hmisDataPath</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"E:/Dropbox/HMIS/Warehouse/All Program 2016 Program Group  3-1-2017 - 5-30-2017"</span><span class="w">
</span><span class="n">vispdatDataPath</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"E:/Dropbox/HMIS/Warehouse/VI-SPDAT and HUD Flat Export for SQL -- 3-6-2017.xlsx"</span><span class="w">
</span><span class="n">staffInfoDataPath</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"E:/Dropbox/HMIS/Warehouse/Staff Contact Info for SQL -- 3-6-2017.xlsx"</span><span class="w">
</span><span class="n">executionPath</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"E:/Dropbox/HMIS/Coordinated_Entry_Report"</span><span class="w">
</span><span class="n">hmisFunctionsFilePath</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"E:/Dropbox/HMIS/HMIS_R_Functions/HMIS_R_Functions.R"</span><span class="w">
</span><span class="n">homebaseFunctionFilePath</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"E:/Dropbox/HMIS/Coordinated_Entry_v2_TX-601/Coordinated_Entry_v2_TX-601/Homebase_Function.R"</span><span class="w">
</span><span class="n">outputPath</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"E:/Dropbox/HMIS/Warehouse"</span><span class="w">
</span><span class="n">viSpdat2DataPath</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"E:/Dropbox/HMIS/Warehouse/VI-SPDAT v2.0 -- 04-05-17 -- TB.xlsx"</span><span class="w">
</span><span class="n">clientContactInfoPath</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"E:/Dropbox/HMIS/Warehouse/Client Contact for SQL -- 5-30-17 -- TB.xlsx"</span><span class="w">
</span><span class="n">outputPath</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"E:/Dropbox/HMIS/Warehouse"</span><span class="w">
</span><span class="c1"># Mac PC</span><span class="w">
 </span><span class="c1">#nameOfReport &lt;- "Homebase_Report.R"</span><span class="w">
 </span><span class="c1">#hmisDataPath &lt;- "C:/Users/Ladvien/Desktop/Homebase 04-18-2017/data"</span><span class="w">
 </span><span class="c1">#vispdatDataPath &lt;- "C:/Users/Ladvien/Dropbox/HMIS/Warehouse/VI-SPDAT and HUD Flat Export for SQL -- 3-6-2017.xlsx"</span><span class="w">
 </span><span class="c1">#staffInfoDataPath &lt;- "C:/Users/Ladvien/Dropbox/HMIS/Warehouse/Staff Contact Info for SQL -- 3-6-2017.xlsx"</span><span class="w">
 </span><span class="c1">#executionPath &lt;- "C:/Users/Ladvien/Dropbox/HMIS/Coordinated_Entry_Report"</span><span class="w">
 </span><span class="c1">#hmisFunctionsFilePath &lt;- "C:/Users/Ladvien/Dropbox/HMIS/HMIS_R_Functions/HMIS_R_Functions.R"</span><span class="w">
 </span><span class="c1">#homebaseFunctionFilePath &lt;- "C:/Users/Ladvien/Dropbox/HMIS/Coordinated_Entry_v2_TX-601/Coordinated_Entry_v2_TX-601/Homebase_Function.R"</span><span class="w">
 </span><span class="c1">#viSpdat2DataPath &lt;- "C:/Users/Ladvien/Dropbox/HMIS/Warehouse/VI-SPDAT v2.0 -- 04-05-17 -- TB.xlsx"</span><span class="w">
 </span><span class="c1">#outputPath &lt;- "C:/Users/Ladvien/Desktop"</span><span class="w">
</span><span class="c1"># Mac</span><span class="w">
</span><span class="c1">#nameOfReport &lt;- "Homebase_Report.R"</span><span class="w">
</span><span class="c1">#hmisDataPath &lt;- "/Users/user/Dropbox/HMIS/Coordinated_Entry_Report/All Programs 12-18-2016 to 03-18-2017"</span><span class="w">
</span><span class="c1">#vispdatDataPath &lt;- "/Users/user/Dropbox/HMIS/Coordinated_Entry_Report/VI-SPDAT and HUD Flat Export for SQL -- 3-6-2017.xlsx"</span><span class="w">
</span><span class="c1">#staffInfoDataPath &lt;- "/Users/user/Dropbox/HMIS/Coordinated_Entry_Report/Staff Contact Info for SQL -- 3-6-2017.xlsx"</span><span class="w">
</span><span class="c1">#executionPath &lt;- "/Users/user/Dropbox/HMIS/Coordinated_Entry_Report"</span><span class="w">
</span><span class="c1">#hmisFunctions &lt;- "/Users/user/Dropbox/HMIS/HMIS_R_Functions/HMIS_R_Functions.R"</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="s2">"arg1: "</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="n">nameOfReport</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="s2">"\n"</span><span class="p">)</span><span class="w"> 
</span><span class="n">cat</span><span class="p">(</span><span class="s2">"arg2: "</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="n">hmisDataPath</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="s2">"\n"</span><span class="p">)</span><span class="w"> 
</span><span class="n">cat</span><span class="p">(</span><span class="s2">"arg3: "</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="n">vispdatDataPath</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="s2">"\n"</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="s2">"arg4: "</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="n">staffInfoDataPath</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="s2">"\n"</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="s2">"arg5: "</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="n">executionPath</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="s2">"\n"</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="s2">"arg6: "</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="n">viSpdat2DataPath</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="s2">"\n"</span><span class="p">)</span><span class="w">


</span><span class="n">source</span><span class="p">(</span><span class="n">homebaseFunctionFilePath</span><span class="p">)</span><span class="w">

</span><span class="n">homebase_all</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">homebase</span><span class="p">(</span><span class="n">hmisDataPath</span><span class="p">,</span><span class="w">
                 </span><span class="n">vispdatDataPath</span><span class="p">,</span><span class="w">
                 </span><span class="n">staffInfoDataPath</span><span class="p">,</span><span class="w">
                 </span><span class="n">executionPath</span><span class="p">,</span><span class="w">
                 </span><span class="n">hmisFunctionsFilePath</span><span class="p">,</span><span class="w">
                 </span><span class="n">viSpdat2DataPath</span><span class="p">,</span><span class="w">
                 </span><span class="n">clientContactInfoPath</span><span class="p">)</span><span class="w">

</span><span class="c1">######## WIP: Aggregates ##########</span><span class="w">
</span><span class="n">numberOfHudAssessmentsPerStaff</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT StaffName, COUNT(StaffName) FROM homebase_all GROUP BY StaffName"</span><span class="p">)</span><span class="w">
</span><span class="c1">#countOfChronicallyHomeless &lt;- sqldf("SELECT COUNT(PersonalID) As CountOfChronic FROM homebase_all WHERE ChronicallyHomeless = 'Yes'")</span><span class="w">
</span><span class="c1">#countOfGender &lt;- sqldf("SELECT DISTINCT(Gender), COUNT(Gender) FROM homebase_all GROUP BY Gender")</span><span class="w">
</span><span class="c1">#ageCounts &lt;- sqldf("SELECT CASE</span><span class="w">
                        </span><span class="c1">#WHEN Age &lt; 5 THEN 1</span><span class="w">
                        </span><span class="c1">#WHEN Age &gt; 4 AND Age &lt; 13 THEN 2</span><span class="w">
                        </span><span class="c1">#WHEN Age &gt; 13 AND Age &lt; 18 THEN 3</span><span class="w">
                        </span><span class="c1">#WHEN Age &gt; 17 AND Age &lt; 25 THEN 4</span><span class="w">
                        </span><span class="c1">#WHEN Age &gt; 24 AND Age &lt; 35 THEN 5</span><span class="w">
                        </span><span class="c1">#WHEN Age &gt; 34 AND Age &lt; 45 THEN 6</span><span class="w">
                        </span><span class="c1">#WHEN Age &gt; 44 AND Age &lt; 55 THEN 7</span><span class="w">
                        </span><span class="c1">#WHEN Age &gt; 54 AND Age &lt; 62 THEN 8</span><span class="w">
                        </span><span class="c1">#WHEN Age &gt; 61 THEN 9</span><span class="w">
                        </span><span class="c1">#END As AgeType</span><span class="w">
                    </span><span class="c1">#FROM homebase_all </span><span class="w">
    </span><span class="c1">#")</span><span class="w">

</span><span class="c1">#aggregates &lt;- cbind(numberOfHudAssessmentsPerStaff, countOfChronicallyHomeless)</span><span class="w">
</span><span class="n">homebase_housed</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *
                         FROM homebase_all
                         WHERE ActiveInPH IS 'Yes'
                         ORDER BY VeteranStatus DESC,
                                  FamilyWithChildren DESC,
                                  ScoreVISPDAT DESC
                         "</span><span class="p">)</span><span class="w">

</span><span class="c1"># Filter client to PersonalIDs with Entry or Update in last 90 days</span><span class="w">
</span><span class="n">homebase_active</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *
                  FROM homebase_all
                  WHERE (
                          RecentHUDEntryDate &gt; DATE('NOW', '-90 DAY')
                          OR (MostRecentHUDAssess &gt; DATE('NOW', '-90 DAY'))
                        ) 
                        AND
                        (
                          (DateOfVISPDAT != '')
                        )
                  AND
                  ActiveInPH IS NOT 'Yes'
                  ORDER BY VeteranStatus DESC,
                           FamilyWithChildren DESC,
                           ScoreVISPDAT DESC
                  "</span><span class="p">)</span><span class="w">

</span><span class="n">tmp_possibly_active</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *
                             FROM homebase_all
                             WHERE (( MostRecentHUDAssess &gt; DATE('NOW', '-90 DAY')) 
                             OR
                             (
                              (DateOfVISPDAT &gt; DATE('NOW', '-90 DAY'))
                             ))
                             AND
                             ActiveInPH IS NOT 'Yes'
                             ORDER BY VeteranStatus DESC,
                                      FamilyWithChildren DESC,
                                      ScoreVISPDAT DESC
                             "</span><span class="p">)</span><span class="w">

</span><span class="n">homebase_possibly_active</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*
                                  FROM tmp_possibly_active a
                                  LEFT JOIN homebase_active b
                                  ON a.PersonalID=b.PersonalID
                                  WHERE b.PersonalID IS NULL
                                  ORDER BY VeteranStatus DESC,
                                           FamilyWithChildren DESC,
                                           ScoreVISPDAT DESC
                                  "</span><span class="p">)</span><span class="w">

</span><span class="n">homebase_psh</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *
                      FROM homebase_active
                      WHERE ChronicallyHomeless = 'Yes'
                      ORDER BY MostRecentHUDAssess DESC                    
                      "</span><span class="p">)</span><span class="w">


</span><span class="n">homebase_psh</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT * FROM homebase_psh ORDER BY 
                                          ScoreVISPDAT DESC, 
                                          NonProgramShelterNights DESC
                                        "</span><span class="p">)</span><span class="w">


</span><span class="n">homebase_rrh</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *
                      FROM homebase_active
                      WHERE ChronicallyHomeless IS NOT 'Yes'
                      "</span><span class="p">)</span><span class="w">

</span><span class="n">tmp_rrh_vets</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT * FROM homebase_rrh WHERE VeteranStatus = 'Yes'"</span><span class="p">)</span><span class="w">
</span><span class="n">tmp_rrh_youth</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT * FROM homebase_rrh WHERE Age &gt; 17 AND Age &lt; 26"</span><span class="p">)</span><span class="w">
</span><span class="n">tmp_rrh_families</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT * FROM homebase_rrh WHERE FamilyWithChildren = 'Yes'"</span><span class="p">)</span><span class="w">
</span><span class="n">tmp_rrh_singles</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT * FROM homebase_rrh WHERE VeteranStatus IS NOT 'Yes' 
                                                           AND FamilyWithChildren IS NOT 'Yes'
                                                           AND Age &lt; 18 OR Age &gt; 25
                                                          "</span><span class="p">)</span><span class="w">


</span><span class="n">tmp_rrh_vets</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT * FROM tmp_rrh_vets ORDER BY
                                                ScoreVISPDAT DESC,
                                                NonProgramShelterNights DESC, 
                                                MostRecentHUDAssess DESC
                                                "</span><span class="p">)</span><span class="w">

</span><span class="n">tmp_rrh_youth</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT * FROM tmp_rrh_youth ORDER BY
                                                ScoreVISPDAT DESC,
                                                NonProgramShelterNights DESC, 
                                                MostRecentHUDAssess DESC
                                                "</span><span class="p">)</span><span class="w">

</span><span class="n">tmp_rrh_families</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT * FROM tmp_rrh_families ORDER BY
                                                ScoreVISPDAT DESC,
                                                NonProgramShelterNights DESC, 
                                                MostRecentHUDAssess DESC
                                                "</span><span class="p">)</span><span class="w">

</span><span class="n">tmp_rrh_singles</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT * FROM tmp_rrh_singles ORDER BY
                                                ScoreVISPDAT DESC,
                                                NonProgramShelterNights DESC, 
                                                MostRecentHUDAssess DESC
                                                "</span><span class="p">)</span><span class="w">

</span><span class="n">homebase_rrh</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rbind</span><span class="p">(</span><span class="n">tmp_rrh_vets</span><span class="p">,</span><span class="w"> </span><span class="n">tmp_rrh_youth</span><span class="p">,</span><span class="w"> </span><span class="n">tmp_rrh_families</span><span class="p">,</span><span class="w"> </span><span class="n">tmp_rrh_singles</span><span class="p">)</span><span class="w">

</span><span class="n">homebase_assistToList</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT StaffName, COUNT(StaffName) As 'AssistToList'
                    FROM homebase_active
                    WHERE ActiveInPH IS NOT 'Yes'
                    GROUP BY StaffName
                    ORDER BY AssistToList DESC
                    "</span><span class="p">)</span><span class="w">


</span><span class="c1">#library("ggplot2")</span><span class="w">

</span><span class="c1">#df1 &lt;- homebase_all$LastProjectTypeContacted</span><span class="w">

</span><span class="c1">#ggplot(homebase_all, aes(NumberOutreachContacts, LastProgramInContact)) +</span><span class="w">
  </span><span class="c1">#geom_raster(aes(fill = Age), interpolate = FALSE)</span><span class="w">


</span><span class="n">detach</span><span class="p">(</span><span class="s2">"package:XLConnect"</span><span class="p">,</span><span class="w"> </span><span class="n">unload</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">detach</span><span class="p">(</span><span class="s2">"package:xlsx"</span><span class="p">,</span><span class="w"> </span><span class="n">unload</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">openxlsx</span><span class="p">)</span><span class="w">

</span><span class="n">reportDetails</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">data.frame</span><span class="p">(</span><span class="n">developmentLog</span><span class="p">)</span><span class="w">
</span><span class="n">colnames</span><span class="p">(</span><span class="n">reportDetails</span><span class="p">)[</span><span class="m">1</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Development Log"</span><span class="w">

</span><span class="n">ch_count</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT 'Chronically\nHomeless' As 'Category', 
    SUM(CASE ChronicallyHomeless WHEN 'Yes' THEN 1 ELSE 0 END) As 'Count'
    FROM homebase_psh"</span><span class="p">)</span><span class="w">

</span><span class="n">vet_count</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT 'Veteran' As 'Category', 
    SUM(CASE VeteranStatus WHEN 'Yes' THEN 1 ELSE 0 END) As 'Count'
    FROM homebase_psh"</span><span class="p">)</span><span class="w">

</span><span class="n">female_count</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT 'Female' As 'Category', 
    SUM(CASE Gender WHEN 'Female' THEN 1 ELSE 0 END) As 'Count'
    FROM homebase_psh"</span><span class="p">)</span><span class="w">

</span><span class="n">male_count</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT 'Male' As 'Category', 
    SUM(CASE Gender WHEN 'Male' THEN 1 ELSE 0 END) As 'Count'
    FROM homebase_psh"</span><span class="p">)</span><span class="w">

</span><span class="n">development_count</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT 'Developmental\nDisability' As 'Category', 
    SUM(CASE DevelopmentalDisability WHEN 'Yes' THEN 1 ELSE 0 END) As 'Count'
    FROM homebase_psh"</span><span class="p">)</span><span class="w">
</span><span class="n">chronic_health_count</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT 'Chronic Health\nCondition' As 'Category', 
    SUM(CASE ChronicHealthCondition WHEN 'Yes' THEN 1 ELSE 0 END) As 'Count'
    FROM homebase_psh"</span><span class="p">)</span><span class="w">
</span><span class="n">hiv_aids_count</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT 'HIV/AIDS' As 'Category', 
    SUM(CASE 'HIV/AIDS' WHEN 'Yes' THEN 1 ELSE 0 END) As 'Count'
    FROM homebase_psh"</span><span class="p">)</span><span class="w">
</span><span class="n">mental_health_count</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT 'Mental Health\nProblem' As 'Category', 
    SUM(CASE MentalHealthProblem WHEN 'Yes' THEN 1 ELSE 0 END) As 'Count'
    FROM homebase_psh"</span><span class="p">)</span><span class="w">
</span><span class="n">substance_abuse_count</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT 'Substance\nAbuse' As 'Category', 
    SUM(CASE SubstanceAbuse WHEN 'Yes' THEN 1 ELSE 0 END) As 'Count'
    FROM homebase_psh"</span><span class="p">)</span><span class="w">

</span><span class="c1">#fleeing_dv_count &lt;-</span><span class="w">

</span><span class="n">family_count</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT 'Family With Children' As 'Category', 
    SUM(CASE FamilyWithChildren WHEN 'Yes' THEN 1 ELSE 0 END) As 'Count'
    FROM homebase_psh"</span><span class="p">)</span><span class="w">


</span><span class="n">counts</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">rbind</span><span class="p">(</span><span class="n">ch_count</span><span class="p">,</span><span class="w">
                </span><span class="n">vet_count</span><span class="p">,</span><span class="w">
                </span><span class="n">female_count</span><span class="p">,</span><span class="w">
                </span><span class="n">male_count</span><span class="p">,</span><span class="w">
                </span><span class="n">development_count</span><span class="p">,</span><span class="w">
                </span><span class="n">chronic_health_count</span><span class="p">,</span><span class="w">
                </span><span class="n">hiv_aids_count</span><span class="p">,</span><span class="w">
                </span><span class="n">mental_health_count</span><span class="p">,</span><span class="w">
                </span><span class="n">substance_abuse_count</span><span class="p">,</span><span class="w">
                </span><span class="n">family_count</span><span class="p">)</span><span class="w">

</span><span class="n">counts</span><span class="o">$</span><span class="n">val</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">seq</span><span class="p">()</span><span class="w">
</span><span class="n">counts</span><span class="o">$</span><span class="n">Category</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">factor</span><span class="p">(</span><span class="n">counts</span><span class="o">$</span><span class="n">Category</span><span class="p">,</span><span class="w"> </span><span class="n">levels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">counts</span><span class="o">$</span><span class="n">Category</span><span class="p">[</span><span class="n">order</span><span class="p">(</span><span class="n">counts</span><span class="o">$</span><span class="n">val</span><span class="p">)])</span><span class="w">

</span><span class="c1">###########################################</span><span class="w">
</span><span class="c1"># Calculate Housing Vacancy               #</span><span class="w">
</span><span class="c1">###########################################</span><span class="w">

</span><span class="n">project</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">loadProject</span><span class="p">(</span><span class="n">hmisDataPath</span><span class="p">)</span><span class="w">
</span><span class="n">enrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">loadEnrollment</span><span class="p">(</span><span class="n">hmisDataPath</span><span class="p">)</span><span class="w">
</span><span class="n">exit</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">loadExit</span><span class="p">(</span><span class="n">hmisDataPath</span><span class="p">)</span><span class="w">
</span><span class="n">inventory</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">loadInventory</span><span class="p">(</span><span class="n">hmisDataPath</span><span class="p">)</span><span class="w">

</span><span class="n">enrollmentAndProject</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">addProjectInfoToEnrollment</span><span class="p">(</span><span class="n">enrollment</span><span class="p">,</span><span class="w"> </span><span class="n">project</span><span class="p">)</span><span class="w">
</span><span class="n">activeInHousing</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.ProjectEntryID, a.PersonalID, a.ProjectType, a.ProjectName, a.ProjectID, b.ExitDate
                          FROM enrollmentAndProject a
                          LEFT JOIN exit b
                          ON a.ProjectEntryID=b.ProjectEntryID
                          WHERE (a.ProjectType = 2 OR a.ProjectType = 3 OR a.ProjectType = 9 OR a.ProjectType = 13)
                          "</span><span class="p">)</span><span class="w">

</span><span class="n">activeInHousing</span><span class="o">$</span><span class="n">ExitDate</span><span class="p">[</span><span class="nf">is.na</span><span class="p">(</span><span class="n">activeInHousing</span><span class="o">$</span><span class="n">ExitDate</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">0</span><span class="w">
</span><span class="n">activeInHousing</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT * FROM activeInHousing WHERE ExitDate = 0"</span><span class="p">)</span><span class="w">
</span><span class="n">aggregatedActiveInHousing</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT ProjectName, ProjectID, COUNT(ProjectName) As 'Enrolled' 
                                    FROM activeInHousing 
                                    GROUP BY ProjectName
                                    ORDER BY Enrolled DESC"</span><span class="p">)</span><span class="w">

</span><span class="n">tmp</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT ProjectID, SUM(HMISParticipatingBeds) As 'Beds' FROM inventory GROUP BY ProjectID"</span><span class="p">)</span><span class="w">

</span><span class="n">aggregatedActiveInHousing</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.Beds 
                                    FROM aggregatedActiveInHousing a
                                    LEFT JOIN tmp b
                                    ON a.ProjectID=b.ProjectID
                                   "</span><span class="p">)</span><span class="w">

</span><span class="n">projectVacancy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT ProjectName, Enrolled, Beds, (CAST(Enrolled As FLOAT) / CAST(Beds As Float)) As 'OccupancyPercentage' FROM aggregatedActiveInHousing ORDER BY 'Vacancy %' DESC"</span><span class="p">)</span><span class="w">
</span><span class="n">projectVacancy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">projectVacancy</span><span class="p">[</span><span class="n">order</span><span class="p">(</span><span class="n">projectVacancy</span><span class="o">$</span><span class="n">OccupancyPercentage</span><span class="p">),]</span><span class="w">
</span><span class="n">projectVacancy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">projectVacancy</span><span class="p">)</span><span class="w">
</span><span class="n">projectWithVacancy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT * FROM projectVacancy WHERE OccupancyPercentage &lt; 1"</span><span class="p">)</span><span class="w">
</span><span class="n">projectWithVacancy</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">projectWithVacancy</span><span class="p">)</span><span class="w">

</span><span class="c1">###########################################</span><span class="w">
</span><span class="c1"># Create some Awesome Graphs              #</span><span class="w">
</span><span class="c1">###########################################</span><span class="w">

</span><span class="n">library</span><span class="p">(</span><span class="s2">"ggplot2"</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="s2">"RColorBrewer"</span><span class="p">)</span><span class="w">
</span><span class="n">png</span><span class="p">(</span><span class="s2">"rrhCountsGraph.png"</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1200</span><span class="p">,</span><span class="w"> </span><span class="n">width</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1200</span><span class="p">,</span><span class="w"> </span><span class="n">res</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">250</span><span class="p">,</span><span class="w"> </span><span class="n">pointsize</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">8</span><span class="p">)</span><span class="w">
</span><span class="n">rrhCountsGraph</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">counts</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Category</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Count</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Category</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Permanent Supportive Housing Eligibe"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.text.x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_text</span><span class="p">(</span><span class="n">angle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">45</span><span class="p">,</span><span class="w"> </span><span class="n">hjust</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w">
        </span><span class="n">legend.position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"none"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">scale_fill_brewer</span><span class="p">(</span><span class="n">palette</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Spectral"</span><span class="p">)</span><span class="w">
</span><span class="n">dev.off</span><span class="p">()</span><span class="w">

</span><span class="n">n</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">60</span><span class="w">
</span><span class="n">qual_col_pals</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">brewer.pal.info</span><span class="p">[</span><span class="n">brewer.pal.info</span><span class="o">$</span><span class="n">category</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">'qual'</span><span class="p">,]</span><span class="w">
</span><span class="n">col_vector</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">mapply</span><span class="p">(</span><span class="n">brewer.pal</span><span class="p">,</span><span class="w"> </span><span class="n">qual_col_pals</span><span class="o">$</span><span class="n">maxcolors</span><span class="p">,</span><span class="w"> </span><span class="n">rownames</span><span class="p">(</span><span class="n">qual_col_pals</span><span class="p">)))</span><span class="w">
</span><span class="n">levels</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">seq</span><span class="p">(</span><span class="n">nrow</span><span class="p">(</span><span class="n">projectVacancy</span><span class="p">))</span><span class="w">
</span><span class="n">projectVacancy</span><span class="o">$</span><span class="n">Order</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">levels</span><span class="w">
</span><span class="n">png</span><span class="p">(</span><span class="s2">"projectVacancy.png"</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1200</span><span class="p">,</span><span class="w"> </span><span class="n">width</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1200</span><span class="p">,</span><span class="w"> </span><span class="n">res</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">250</span><span class="p">,</span><span class="w"> </span><span class="n">pointsize</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">8</span><span class="p">)</span><span class="w">
</span><span class="n">projectVacancyGraph</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">projectVacancy</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">ProjectName</span><span class="p">,</span><span class="w"> </span><span class="o">-</span><span class="n">projectVacancy</span><span class="o">$</span><span class="n">Order</span><span class="p">),</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">OccupancyPercentage</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ProjectName</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Occupancy by Housing Projects"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.text.x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_text</span><span class="p">(</span><span class="n">angle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">90</span><span class="p">,</span><span class="w"> </span><span class="n">hjust</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w">
        </span><span class="n">legend.position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"none"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">coord_flip</span><span class="p">()</span><span class="w">
</span><span class="n">dev.off</span><span class="p">()</span><span class="w">
</span><span class="n">print</span><span class="p">(</span><span class="n">projectVacancyGraph</span><span class="p">)</span><span class="w">


</span><span class="n">n</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">60</span><span class="w">
</span><span class="n">qual_col_pals</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">brewer.pal.info</span><span class="p">[</span><span class="n">brewer.pal.info</span><span class="o">$</span><span class="n">category</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s1">'qual'</span><span class="p">,]</span><span class="w">
</span><span class="n">col_vector</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">unlist</span><span class="p">(</span><span class="n">mapply</span><span class="p">(</span><span class="n">brewer.pal</span><span class="p">,</span><span class="w"> </span><span class="n">qual_col_pals</span><span class="o">$</span><span class="n">maxcolors</span><span class="p">,</span><span class="w"> </span><span class="n">rownames</span><span class="p">(</span><span class="n">qual_col_pals</span><span class="p">)))</span><span class="w">
</span><span class="n">levels</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">seq</span><span class="p">(</span><span class="n">nrow</span><span class="p">(</span><span class="n">projectWithVacancy</span><span class="p">))</span><span class="w">
</span><span class="n">projectWithVacancy</span><span class="o">$</span><span class="n">Order</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">levels</span><span class="w">

</span><span class="n">vacancyPal</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"#70AD47"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#47A3AD"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#AD5147"</span><span class="p">,</span><span class="w"> </span><span class="s2">"#8447AD"</span><span class="p">)</span><span class="w">

</span><span class="n">png</span><span class="p">(</span><span class="s2">"projectWithVacancy.png"</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1200</span><span class="p">,</span><span class="w"> </span><span class="n">width</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1200</span><span class="p">,</span><span class="w"> </span><span class="n">res</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">250</span><span class="p">,</span><span class="w"> </span><span class="n">pointsize</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">8</span><span class="p">)</span><span class="w">
</span><span class="n">projectWithVacancyGraph</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">ggplot</span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">projectWithVacancy</span><span class="p">,</span><span class="w">
        </span><span class="n">aes</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">reorder</span><span class="p">(</span><span class="n">ProjectName</span><span class="p">,</span><span class="w"> </span><span class="n">Order</span><span class="p">),</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">OccupancyPercentage</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">OccupancyPercentage</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="n">width</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">vacancyPal</span><span class="p">[</span><span class="m">4</span><span class="p">])</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">scale_fill_gradient2</span><span class="p">(</span><span class="n">low</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"green"</span><span class="p">,</span><span class="w"> </span><span class="n">mid</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">vacancyPal</span><span class="p">[</span><span class="m">1</span><span class="p">],</span><span class="w"> </span><span class="n">high</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">vacancyPal</span><span class="p">[</span><span class="m">2</span><span class="p">])</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">labs</span><span class="p">(</span><span class="n">title</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Occupancy by Project"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">xlab</span><span class="p">(</span><span class="s2">"Current Occupancy %"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">ylab</span><span class="p">(</span><span class="s2">"Occupancy %"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">theme</span><span class="p">(</span><span class="n">axis.text.x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_text</span><span class="p">(</span><span class="n">angle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">90</span><span class="p">,</span><span class="w"> </span><span class="n">hjust</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">size</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">16</span><span class="p">),</span><span class="w">
          </span><span class="n">axis.text.y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">element_text</span><span class="p">(</span><span class="n">hjust</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="p">),</span><span class="w">
        </span><span class="n">legend.position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"none"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
    </span><span class="n">coord_flip</span><span class="p">()</span><span class="w">
</span><span class="n">dev.off</span><span class="p">()</span><span class="w">
</span><span class="n">ggsave</span><span class="p">(</span><span class="s2">"projectWithVacancy.png"</span><span class="p">)</span><span class="w">
</span><span class="n">print</span><span class="p">(</span><span class="n">projectWithVacancyGraph</span><span class="p">)</span><span class="w">

</span><span class="c1">###########################################</span><span class="w">
</span><span class="c1"># Format Workbook, Add Graphs, and Write  #`</span><span class="w">
</span><span class="c1">###########################################</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="s2">"openxlsx"</span><span class="p">)</span><span class="w">
</span><span class="n">setwd</span><span class="p">(</span><span class="n">outputPath</span><span class="p">)</span><span class="w">
</span><span class="c1"># Theme</span><span class="w">
</span><span class="n">color_column_background</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"#70AD47"</span><span class="w">
</span><span class="n">color_header_font_color</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"#FFFFFF"</span><span class="w">
</span><span class="n">column_header_font_size</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="m">18</span><span class="w">

</span><span class="c1">## Header Styles</span><span class="w">
</span><span class="n">headerStyle1</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">createStyle</span><span class="p">(</span><span class="n">fgFill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">color_column_background</span><span class="p">,</span><span class="w">
                            </span><span class="n">valign</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"top"</span><span class="p">,</span><span class="w">
                            </span><span class="n">halign</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"CENTER"</span><span class="p">,</span><span class="w">
                            </span><span class="n">fontColour</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">color_header_font_color</span><span class="p">,</span><span class="w">
                            </span><span class="n">fontSize</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">column_header_font_size</span><span class="p">)</span><span class="w">

</span><span class="c1"># Create the Workbook</span><span class="w">
</span><span class="n">homebaseWorkbook</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">createWorkbook</span><span class="p">()</span><span class="w">

</span><span class="c1"># Add the needed sheets.</span><span class="w">
</span><span class="n">addWorksheet</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheetName</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Dashboard"</span><span class="p">)</span><span class="w">
</span><span class="n">addWorksheet</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheetName</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"EligibleForPSH"</span><span class="p">)</span><span class="w">
</span><span class="n">addWorksheet</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheetName</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"EligibleForRRH"</span><span class="p">)</span><span class="w">
</span><span class="n">addWorksheet</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheetName</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Possibly Active"</span><span class="p">)</span><span class="w">
</span><span class="n">addWorksheet</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheetName</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Housed"</span><span class="p">)</span><span class="w">
</span><span class="n">addWorksheet</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheetName</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"AssistToList"</span><span class="p">)</span><span class="w">
</span><span class="n">addWorksheet</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheetName</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Report Details"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Add the data to worksheets.</span><span class="w">
</span><span class="n">writeDataTable</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">homebase_psh</span><span class="p">,</span><span class="w"> </span><span class="n">colNames</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">tableStyle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"TableStyleLight9"</span><span class="p">,</span><span class="w"> </span><span class="n">headerStyle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">headerStyle1</span><span class="p">)</span><span class="w">
</span><span class="n">writeDataTable</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">homebase_rrh</span><span class="p">,</span><span class="w"> </span><span class="n">colNames</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">tableStyle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"TableStyleLight9"</span><span class="p">,</span><span class="w"> </span><span class="n">headerStyle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">headerStyle1</span><span class="p">)</span><span class="w">
</span><span class="n">writeDataTable</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">4</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">homebase_possibly_active</span><span class="p">,</span><span class="w"> </span><span class="n">colNames</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">tableStyle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"TableStyleLight9"</span><span class="p">,</span><span class="w"> </span><span class="n">headerStyle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">headerStyle1</span><span class="p">)</span><span class="w">
</span><span class="n">writeDataTable</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">homebase_housed</span><span class="p">,</span><span class="w"> </span><span class="n">colNames</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">tableStyle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"TableStyleLight9"</span><span class="p">,</span><span class="w"> </span><span class="n">headerStyle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">headerStyle1</span><span class="p">)</span><span class="w">
</span><span class="n">writeDataTable</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">6</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">homebase_assistToList</span><span class="p">,</span><span class="w"> </span><span class="n">colNames</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">tableStyle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"TableStyleLight9"</span><span class="p">,</span><span class="w"> </span><span class="n">headerStyle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">headerStyle1</span><span class="p">)</span><span class="w">
</span><span class="n">writeDataTable</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">7</span><span class="p">,</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">reportDetails</span><span class="p">,</span><span class="w"> </span><span class="n">colNames</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">,</span><span class="w"> </span><span class="n">tableStyle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"TableStyleLight9"</span><span class="p">,</span><span class="w"> </span><span class="n">headerStyle</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">headerStyle1</span><span class="p">)</span><span class="w">

</span><span class="c1"># Format the columns for readability.</span><span class="w">
</span><span class="n">setColWidths</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="o">:</span><span class="n">ncol</span><span class="p">(</span><span class="n">homebase_psh</span><span class="p">),</span><span class="w"> </span><span class="n">widths</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"auto"</span><span class="p">)</span><span class="w">
</span><span class="n">setColWidths</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="o">:</span><span class="n">ncol</span><span class="p">(</span><span class="n">homebase_rrh</span><span class="p">),</span><span class="w"> </span><span class="n">widths</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"auto"</span><span class="p">)</span><span class="w">
</span><span class="n">setColWidths</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">4</span><span class="p">,</span><span class="w"> </span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="o">:</span><span class="n">ncol</span><span class="p">(</span><span class="n">homebase_possibly_active</span><span class="p">),</span><span class="w"> </span><span class="n">widths</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"auto"</span><span class="p">)</span><span class="w">
</span><span class="n">setColWidths</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="o">:</span><span class="n">ncol</span><span class="p">(</span><span class="n">homebase_housed</span><span class="p">),</span><span class="w"> </span><span class="n">widths</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"auto"</span><span class="p">)</span><span class="w">
</span><span class="n">setColWidths</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">6</span><span class="p">,</span><span class="w"> </span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="o">:</span><span class="n">ncol</span><span class="p">(</span><span class="n">homebase_assistToList</span><span class="p">),</span><span class="w"> </span><span class="n">widths</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"auto"</span><span class="p">)</span><span class="w">
</span><span class="n">setColWidths</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">7</span><span class="p">,</span><span class="w"> </span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="o">:</span><span class="n">ncol</span><span class="p">(</span><span class="n">reportDetails</span><span class="p">),</span><span class="w"> </span><span class="n">widths</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"auto"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Format first column statically.  For some reason, 'auto' clips the PersonalID</span><span class="w">
</span><span class="n">setColWidths</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">widths</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">38</span><span class="p">)</span><span class="w">
</span><span class="n">setColWidths</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">widths</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">38</span><span class="p">)</span><span class="w">
</span><span class="n">setColWidths</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">4</span><span class="p">,</span><span class="w"> </span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">widths</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">38</span><span class="p">)</span><span class="w">
</span><span class="n">setColWidths</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">widths</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">38</span><span class="p">)</span><span class="w">
</span><span class="n">setColWidths</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">6</span><span class="p">,</span><span class="w"> </span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">widths</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">38</span><span class="p">)</span><span class="w">
</span><span class="n">setColWidths</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">cols</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">widths</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">38</span><span class="p">)</span><span class="w">

</span><span class="c1"># Format rows.</span><span class="w">
</span><span class="n">setRowHeights</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">rows</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">40</span><span class="p">)</span><span class="w">
</span><span class="n">setRowHeights</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">rows</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">40</span><span class="p">)</span><span class="w">
</span><span class="n">setRowHeights</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">4</span><span class="p">,</span><span class="w"> </span><span class="n">rows</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">40</span><span class="p">)</span><span class="w">
</span><span class="n">setRowHeights</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="n">rows</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">40</span><span class="p">)</span><span class="w">
</span><span class="n">setRowHeights</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">6</span><span class="p">,</span><span class="w"> </span><span class="n">rows</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">40</span><span class="p">)</span><span class="w">
</span><span class="n">setRowHeights</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">7</span><span class="p">,</span><span class="w"> </span><span class="n">rows</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">40</span><span class="p">)</span><span class="w">

</span><span class="c1"># Freeze the top row</span><span class="w">
</span><span class="n">freezePane</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">2</span><span class="p">,</span><span class="w"> </span><span class="n">firstRow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">freezePane</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3</span><span class="p">,</span><span class="w"> </span><span class="n">firstRow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">freezePane</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">4</span><span class="p">,</span><span class="w"> </span><span class="n">firstRow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">freezePane</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">5</span><span class="p">,</span><span class="w"> </span><span class="n">firstRow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">freezePane</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">sheet</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">6</span><span class="p">,</span><span class="w"> </span><span class="n">firstRow</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">

</span><span class="c1">##################################</span><span class="w">
</span><span class="c1">#### Add Graphs to Workbook ######</span><span class="w">
</span><span class="c1">##################################  </span><span class="w">
</span><span class="n">print</span><span class="p">(</span><span class="n">rrhCountsGraph</span><span class="p">)</span><span class="w"> </span><span class="c1">#plot needs to be showing</span><span class="w">
</span><span class="n">insertPlot</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="m">1</span><span class="p">,</span><span class="w"> </span><span class="n">width</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">7.87</span><span class="p">,</span><span class="w"> </span><span class="n">height</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">5.5</span><span class="p">,</span><span class="w"> </span><span class="n">fileType</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"png"</span><span class="p">,</span><span class="w"> </span><span class="n">units</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"in"</span><span class="p">)</span><span class="w">

</span><span class="c1"># Openxlsx requires zip.exe to save the workbook.  Weird.</span><span class="w">
</span><span class="n">Sys.setenv</span><span class="p">(</span><span class="s2">"R_ZIPCMD"</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"C:/Rtools/bin/zip.exe"</span><span class="p">)</span><span class="w">
</span><span class="n">today</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">Sys.Date</span><span class="p">()</span><span class="w">
</span><span class="n">print</span><span class="p">(</span><span class="n">outputPath</span><span class="p">)</span><span class="w">
</span><span class="n">saveWorkbook</span><span class="p">(</span><span class="n">homebaseWorkbook</span><span class="p">,</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">outputPath</span><span class="p">,</span><span class="w"> </span><span class="s2">"\\"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Homebase_v2_"</span><span class="p">,</span><span class="w"> </span><span class="n">today</span><span class="p">,</span><span class="w"> </span><span class="s2">".xlsx"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="s2">""</span><span class="p">),</span><span class="w"> </span><span class="n">overwrite</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
</span><span class="n">cat</span><span class="p">(</span><span class="n">getwd</span><span class="p">())</span><span class="w">

</span><span class="n">openXL</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">outputPath</span><span class="p">,</span><span class="w"> </span><span class="s2">"\\"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Homebase_v2_"</span><span class="p">,</span><span class="w"> </span><span class="n">today</span><span class="p">,</span><span class="w"> </span><span class="s2">".xlsx"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span></code></pre></figure>

<p>The whole thing relies on some R functions I’ve written to assist:</p>

<h2 id="hmis-functions">HMIS Functions</h2>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="w">  </span><span class="c1"># Thanks SO. </span><span class="w">
</span><span class="c1"># http://stackoverflow.com/questions/9341635/check-for-installed-packages-before-running-install-packages</span><span class="w">
</span><span class="n">pkgTest</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w">
</span><span class="p">{</span><span class="w">
  </span><span class="k">if</span><span class="w"> </span><span class="p">(</span><span class="o">!</span><span class="n">require</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">character.only</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">))</span><span class="w">
  </span><span class="p">{</span><span class="w">
    </span><span class="n">install.packages</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">dep</span><span class="o">=</span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
    </span><span class="n">library</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">character.only</span><span class="w"> </span><span class="o">=</span><span class="w">  </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
    </span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">require</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="n">character.only</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">TRUE</span><span class="p">))</span><span class="w"> </span><span class="n">stop</span><span class="p">(</span><span class="s2">"Package not found"</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w"> </span><span class="k">else</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="n">library</span><span class="p">(</span><span class="n">x</span><span class="p">,</span><span class="w"> </span><span class="n">character.only</span><span class="w"> </span><span class="o">=</span><span class="w">  </span><span class="kc">TRUE</span><span class="p">)</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">pkgTest</span><span class="p">(</span><span class="s2">"sqldf"</span><span class="p">)</span><span class="w">
</span><span class="n">pkgTest</span><span class="p">(</span><span class="s2">"tcltk"</span><span class="p">)</span><span class="w">
</span><span class="n">pkgTest</span><span class="p">(</span><span class="s2">"zoo"</span><span class="p">)</span><span class="w">
</span><span class="n">pkgTest</span><span class="p">(</span><span class="s2">"XLConnect"</span><span class="p">)</span><span class="w">

</span><span class="n">loadAffiliation</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">()){</span><span class="w">
  </span><span class="n">affiliation</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="s2">"/Affiliation.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">loadClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">()){</span><span class="w">
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="s2">"/Client.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">loadDisabilities</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">())</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">disabilities</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w">  </span><span class="s2">"/Disabilities.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">loadEmployementEducation</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">())</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">employementEducation</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="s2">"/EmploymentEducation.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">loadEnrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">())</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">enrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="s2">"/Enrollment.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">loadEnrollmentCoc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">())</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">enrollmentCoc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="s2">"/EnrollmentCoC.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">loadExit</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">())</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">exit</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="s2">"/Exit.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">loadExport</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">())</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">export</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="s2">"/Export.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">loadFunder</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">()){</span><span class="w">
  </span><span class="n">funder</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="s2">"/Funder.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">loadHealthAndDv</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">()){</span><span class="w">
  </span><span class="n">healthAndDv</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="s2">"/HealthAndDV.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">loadIncomeBenefits</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">()){</span><span class="w">
  </span><span class="n">incomeBenefits</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="s2">"/IncomeBenefits.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">loadInventory</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">()){</span><span class="w">
  </span><span class="n">inventory</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="s2">"/Inventory.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">loadOrganization</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">()){</span><span class="w">
  </span><span class="n">organization</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="s2">"/Organization.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w"> 
</span><span class="p">}</span><span class="w">

</span><span class="n">loadProject</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">()){</span><span class="w">
  </span><span class="n">project</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="s2">"/Project.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">loadProjectCoc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">()){</span><span class="w">
  </span><span class="n">projectCoc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="s2">"/ProjectCoC.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">loadServices</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">()){</span><span class="w">
  </span><span class="n">services</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="s2">"/Services.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">loadSite</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">path</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">getwd</span><span class="p">()){</span><span class="w">
  </span><span class="n">site</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.csv</span><span class="p">(</span><span class="n">paste</span><span class="p">(</span><span class="n">path</span><span class="p">,</span><span class="w"> </span><span class="s2">"/Site.csv"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="c1"># loadHMISCsvs51 &lt;- function(path) {</span><span class="w">
</span><span class="c1">#   affiliation &lt;- read.csv(paste(path, "/Affiliation.csv", sep = ""))</span><span class="w">
</span><span class="c1">#   client &lt;- read.csv(paste(path, "/Client.csv", sep = ""))</span><span class="w">
</span><span class="c1">#   disabilities &lt;- read.csv(paste(path,  "/Disabilities.csv", sep = ""))</span><span class="w">
</span><span class="c1">#   employementEducation &lt;- read.csv(paste(path, "/EmploymentEducation.csv", sep = ""))</span><span class="w">
</span><span class="c1">#   enrollment &lt;- read.csv(paste(path, "/Enrollment.csv", sep = ""))</span><span class="w">
</span><span class="c1">#   exit &lt;- read.csv(paste(path, "/Exit.csv", sep = ""))</span><span class="w">
</span><span class="c1">#   export &lt;- read.csv(paste(path, "/Export.csv", sep = ""))</span><span class="w">
</span><span class="c1">#   funder &lt;- read.csv(paste(path, "/Funder.csv", sep = ""))</span><span class="w">
</span><span class="c1">#   healthAndDv &lt;- read.csv(paste(path, "/HealthAndDV.csv", sep = ""))</span><span class="w">
</span><span class="c1">#   incomeBenefits &lt;- read.csv(paste(path, "/IncomeBenefits.csv", sep = ""))</span><span class="w">
</span><span class="c1">#   inventory &lt;- read.csv(paste(path, "/Inventory.csv", sep = ""))</span><span class="w">
</span><span class="c1">#   organization &lt;- read.csv(paste(path, "/Organization.csv", sep = ""))</span><span class="w">
</span><span class="c1">#   project &lt;- read.csv(paste(path, "/Project.csv", sep = ""))</span><span class="w">
</span><span class="c1">#   projectCoc &lt;- read.csv(paste(path, "/ProjectCoC.csv", sep = ""))</span><span class="w">
</span><span class="c1">#   services &lt;- read.csv(paste(path, "/Services.csv", sep = ""))</span><span class="w">
</span><span class="c1">#   site &lt;- read.csv(paste(path, "/Site.csv", sep = ""))</span><span class="w">
</span><span class="c1">#   return(c(services, site))</span><span class="w">
</span><span class="c1"># }</span><span class="w">



</span><span class="n">makeDestinationReadable</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="w"> </span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">exit</span><span class="w">
  </span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *, Destination as 'ReadableDestination' FROM df"</span><span class="p">)</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"1"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Emergency shelter, including hotel or motel paid for with emergency shelter voucher"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"2"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Transitional housing for homeless persons (including homeless youth)"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"3"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Permanent housing for formerly homeless persons (such as: CoC project; or HUD legacy programs; or HOPWA PH)"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"4"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Psychiatric hospital or other psychiatric facility"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"5"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Substance abuse treatment facility or detox center"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"6"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Hospital or other residential non-psychiatric medical facility"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"7"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Jail, prison or juvenile detention facility"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"8"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Client doesn’t know"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"9"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Client refused"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"10"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Rental by client, no ongoing housing subsidy"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"11"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Owned by client, no ongoing housing subsidy"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"12"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Staying or living with family, temporary tenure (e.g., room, apartment or house)"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"13"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Staying or living with friends, temporary tenure (e.g., room apartment or house)"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"14"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Hotel or motel paid for without emergency shelter voucher"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"15"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Foster care home or foster care group home"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"16"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Place not meant for habitation (e.g., a vehicle, an abandoned building, bus/train/subway station/airport or anywhere outside)"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"17"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Other"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"18"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Safe Haven"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"19"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Rental by client, with VASH housing subsidy"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"20"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Rental by client, with other ongoing housing subsidy"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"21"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Owned by client, with ongoing housing subsidy"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"22"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Staying or living with family, permanent tenure"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"23"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Staying or living with friends, permanent tenure"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"24"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Deceased"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"25"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Long-term care facility or nursing home"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"26"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Moved from one HOPWA funded project to HOPWA PH"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"27"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Moved from one HOPWA funded project to HOPWA TH"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"28"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Rental by client, with GPD TIP housing subsidy"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"29"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Residential project or halfway house with no homeless criteria"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"30"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"No exit interview completed"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableDestination</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"99"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Data not collected"</span><span class="w">
  
  </span><span class="n">df</span><span class="w">
</span><span class="p">}</span><span class="w">


</span><span class="n">makeProjectTypeReadable</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="w"> </span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *, ProjectType as 'ReadableProjectType' FROM df"</span><span class="p">)</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"1"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Emergency Shelter"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"2"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Transitional Housing"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"3"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"PH - Permanent Supportive Housing"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"4"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Street Outreach"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"5"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Services Only"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"6"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Other"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"7"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Safe Haven"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"8"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"PH – Housing Only"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"10"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"PH – Housing with Services (no disability required for entry)"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"11"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Day Shelter"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"12"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Homelessness Prevention"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"13"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"PH - Rapid Re-Housing"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"14"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Coordinated Assessment"</span><span class="w">
  
  </span><span class="n">df</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">makeRaceReadable</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">client</span><span class="p">){</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">AmIndAKNativ</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">AmIndAKNative</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"1"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"American Indian or Alaska Native"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">Asian</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">Asian</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"1"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Asian"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">BlackAfAmerican</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">BlackAfAmerican</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"1"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Black or African American"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">NativeHIOtherPacific</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">NativeHIOtherPacific</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"1"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Native Hawaiian or Other Pacific Islander"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">White</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">White</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"1"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"White"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">RaceNone</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">RaceNone</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"8"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Client doesnt know"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">RaceNone</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">RaceNone</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"9"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Client refused"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">RaceNone</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">RaceNone</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"99"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Data not collected"</span><span class="w">
  </span><span class="n">client</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">makeGenderReadable</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  
  </span><span class="c1"># HMIS CSV 5.1</span><span class="w">
  </span><span class="c1"># 0 Female</span><span class="w">
  </span><span class="c1"># 1 Male</span><span class="w">
  </span><span class="c1"># 2 Transgender male to female</span><span class="w">
  </span><span class="c1"># 3 Transgender female to male</span><span class="w">
  </span><span class="c1"># 4 Doesn’t identify as male, female, or transgender</span><span class="w">
  </span><span class="c1"># 8 Client doesn’t know</span><span class="w">
  </span><span class="c1"># 9 Client refused</span><span class="w">
  </span><span class="c1"># 99 Data not collected</span><span class="w">
  
  </span><span class="n">client</span><span class="o">$</span><span class="n">Gender</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">Gender</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"0"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Female"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">Gender</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">Gender</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"1"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Male"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">Gender</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">Gender</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"2"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Transgender male to female"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">Gender</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">Gender</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"3"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Transgender female to male"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">Gender</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">Gender</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"4"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Doesn’t identify as male, female, or transgender"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">Gender</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">Gender</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"8"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Client doesn’t know"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">Gender</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">Gender</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"9"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Client refused"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">Gender</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">Gender</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"99"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Data not collected"</span><span class="w">
  
  </span><span class="n">client</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">makeVeteranStatusReadable</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  
  </span><span class="c1"># HMIS CSV 5.1</span><span class="w">
  </span><span class="c1"># 0 No</span><span class="w">
  </span><span class="c1"># 1 Yes</span><span class="w">
  </span><span class="c1"># 8 Client doesn’t know</span><span class="w">
  </span><span class="c1"># 9 Client refused</span><span class="w">
  </span><span class="c1"># 99 Data not collected</span><span class="w">
  
  </span><span class="n">client</span><span class="o">$</span><span class="n">VeteranStatus</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">VeteranStatus</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"0"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"No"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">VeteranStatus</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">VeteranStatus</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"1"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Yes"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">VeteranStatus</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">VeteranStatus</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"8"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Client doesn’t know"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">VeteranStatus</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">VeteranStatus</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"9"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Client refused"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">VeteranStatus</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">VeteranStatus</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"99"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Data not collected"</span><span class="w">
  
  </span><span class="n">client</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">makeEthnicityReadable</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  
  </span><span class="c1"># HMIS CSV 5.1</span><span class="w">
  </span><span class="c1"># 0 Non-Hispanic/Non-Latino</span><span class="w">
  </span><span class="c1"># 1 Hispanic/Latino</span><span class="w">
  </span><span class="c1"># 8 Client doesn’t know</span><span class="w">
  </span><span class="c1"># 9 Client refused</span><span class="w">
  </span><span class="c1"># 99 Data not collected</span><span class="w">
  
  </span><span class="n">client</span><span class="o">$</span><span class="n">Ethnicity</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">Ethnicity</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"0"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Non-Hispanic/Non-Latino"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">Ethnicity</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">Ethnicity</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"1"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Hispanic/Latino"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">Ethnicity</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">Ethnicity</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"8"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Client doesn’t know"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">Ethnicity</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">Ethnicity</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"9"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Client refused"</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">Ethnicity</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">Ethnicity</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"99"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Data not collected"</span><span class="w">
  
  </span><span class="n">client</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">combineRaceColumnsAndMakeReadable</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">client</span><span class="p">){</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">AmIndAKNativ</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">AmIndAKNative</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"0"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">""</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">Asian</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">Asian</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"0"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">""</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">BlackAfAmerican</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">BlackAfAmerican</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"0"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">""</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">NativeHIOtherPacific</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">NativeHIOtherPacific</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"0"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">""</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">White</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">White</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"0"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">""</span><span class="w">  
  </span><span class="n">client</span><span class="o">$</span><span class="n">RaceNone</span><span class="p">[</span><span class="n">client</span><span class="o">$</span><span class="n">RaceNone</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"0"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">""</span><span class="w">
  
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">makeRaceReadable</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">Race</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">client</span><span class="o">$</span><span class="n">AmIndAKNativ</span><span class="p">,</span><span class="w"> </span><span class="n">client</span><span class="o">$</span><span class="n">Asian</span><span class="p">,</span><span class="w"> </span><span class="n">client</span><span class="o">$</span><span class="n">BlackAfAmerican</span><span class="p">,</span><span class="w"> </span><span class="n">client</span><span class="o">$</span><span class="n">NativeHIOtherPacific</span><span class="p">,</span><span class="w"> </span><span class="n">client</span><span class="o">$</span><span class="n">White</span><span class="p">,</span><span class="w"> </span><span class="n">client</span><span class="o">$</span><span class="n">RaceNone</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">" "</span><span class="p">)</span><span class="w">
  </span><span class="n">client</span><span class="o">$</span><span class="n">Race</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">gsub</span><span class="p">(</span><span class="s2">" NA"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="n">client</span><span class="o">$</span><span class="n">Race</span><span class="p">)</span><span class="w">
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">client</span><span class="p">[,</span><span class="o">-</span><span class="n">which</span><span class="p">(</span><span class="nf">names</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"AmIndAKNative"</span><span class="p">)]</span><span class="w">
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">client</span><span class="p">[,</span><span class="o">-</span><span class="n">which</span><span class="p">(</span><span class="nf">names</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"Asian"</span><span class="p">)]</span><span class="w"> 
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">client</span><span class="p">[,</span><span class="o">-</span><span class="n">which</span><span class="p">(</span><span class="nf">names</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"BlackAfAmerican"</span><span class="p">)]</span><span class="w">
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">client</span><span class="p">[,</span><span class="o">-</span><span class="n">which</span><span class="p">(</span><span class="nf">names</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"NativeHIOtherPacific"</span><span class="p">)]</span><span class="w">
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">client</span><span class="p">[,</span><span class="o">-</span><span class="n">which</span><span class="p">(</span><span class="nf">names</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"White"</span><span class="p">)]</span><span class="w">
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">client</span><span class="p">[,</span><span class="o">-</span><span class="n">which</span><span class="p">(</span><span class="nf">names</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"RaceNone"</span><span class="p">)]</span><span class="w">
  </span><span class="n">client</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">addDisabilityInfoToClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">client</span><span class="p">,</span><span class="w"> </span><span class="n">disabilities</span><span class="p">){</span><span class="w">
  
  </span><span class="c1"># From HMIS CSV Programming Specifications 5.1</span><span class="w">
  </span><span class="c1"># 5 = Physical disability</span><span class="w">
  </span><span class="n">clientsWithPhysicalDisability</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *, 'Yes' As PhysicalDisability 
                                         FROM disabilities
                                         WHERE DisabilityType = 5
                                         AND DisabilityResponse = 1
                                         "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">clientsWithPhysicalDisability</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">getMostRecentRecordsPerId</span><span class="p">(</span><span class="n">clientsWithPhysicalDisability</span><span class="p">,</span><span class="w"> </span><span class="s2">"PersonalID"</span><span class="p">,</span><span class="w"> </span><span class="s2">"InformationDate"</span><span class="p">)</span><span class="w">
  
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.PhysicalDisability
                  FROM client a
                  LEFT JOIN clientsWithPhysicalDisability b
                  ON a.PersonalID=b.PersonalID
                  "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># 6 Developmental disability</span><span class="w">
  </span><span class="n">clientDevelopmentalDisability</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *, 'Yes' As DevelopmentalDisability 
                                         FROM disabilities
                                            WHERE DisabilityType = 6
                                            AND DisabilityResponse = 1
                                            "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">clientDevelopmentalDisability</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">getMostRecentRecordsPerId</span><span class="p">(</span><span class="n">clientDevelopmentalDisability</span><span class="p">,</span><span class="w"> </span><span class="s2">"PersonalID"</span><span class="p">,</span><span class="w"> </span><span class="s2">"InformationDate"</span><span class="p">)</span><span class="w">
  
  </span><span class="n">clientDevelopmentalDisability</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">clientDevelopmentalDisability</span><span class="p">)</span><span class="w">
  
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.DevelopmentalDisability
                  FROM client a
                  LEFT JOIN clientDevelopmentalDisability b
                  ON a.PersonalID=b.PersonalID
                  "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># 7 Chronic health condition</span><span class="w">
  </span><span class="n">clientChronicHealthCondition</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *, 'Yes' As ChronicHealthCondition 
                                         FROM disabilities
                                        WHERE DisabilityType = 7
                                        AND DisabilityResponse = 1
                                        "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">clientChronicHealthCondition</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">getMostRecentRecordsPerId</span><span class="p">(</span><span class="n">clientChronicHealthCondition</span><span class="p">,</span><span class="w"> </span><span class="s2">"PersonalID"</span><span class="p">,</span><span class="w"> </span><span class="s2">"InformationDate"</span><span class="p">)</span><span class="w">
  
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.ChronicHealthCondition
                  FROM client a
                  LEFT JOIN clientChronicHealthCondition b
                  ON a.PersonalID=b.PersonalID
                  "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># 8 HIV/AIDS</span><span class="w">
  </span><span class="n">clientHivAids</span><span class="w">         </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *, 'Yes' As 'HIV/AIDS' 
                                         FROM disabilities
                                        WHERE DisabilityType = 8
                                        AND DisabilityResponse = 1
                                        "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">clientHivAids</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">getMostRecentRecordsPerId</span><span class="p">(</span><span class="n">clientHivAids</span><span class="p">,</span><span class="w"> </span><span class="s2">"PersonalID"</span><span class="p">,</span><span class="w"> </span><span class="s2">"InformationDate"</span><span class="p">)</span><span class="w">
  
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.'HIV/AIDS'
                  FROM client a
                  LEFT JOIN clientHivAids b
                  ON a.PersonalID=b.PersonalID
                  "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># 9 Mental health problem</span><span class="w">
  </span><span class="n">clientMentalHealthProblem</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *, 'Yes' As MentalHealthProblem 
                                         FROM disabilities
                                     WHERE DisabilityType = 9
                                     AND DisabilityResponse = 1
                                     "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">clientMentalHealthProblem</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">getMostRecentRecordsPerId</span><span class="p">(</span><span class="n">clientMentalHealthProblem</span><span class="p">,</span><span class="w"> </span><span class="s2">"PersonalID"</span><span class="p">,</span><span class="w"> </span><span class="s2">"InformationDate"</span><span class="p">)</span><span class="w">
  
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.MentalHealthProblem
                  FROM client a
                  LEFT JOIN clientMentalHealthProblem b
                  ON a.PersonalID=b.PersonalID
                  "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># 10 Substance abuse</span><span class="w">
  </span><span class="n">clientSubstanceAbuse</span><span class="w">      </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *, 'Yes' As SubstanceAbuse 
                                         FROM disabilities
                                     WHERE DisabilityType = 10
                                     AND DisabilityResponse = 1
                                     "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">clientSubstanceAbuse</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">getMostRecentRecordsPerId</span><span class="p">(</span><span class="n">clientSubstanceAbuse</span><span class="p">,</span><span class="w"> </span><span class="s2">"PersonalID"</span><span class="p">,</span><span class="w"> </span><span class="s2">"InformationDate"</span><span class="p">)</span><span class="w">
  
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.SubstanceAbuse
                  FROM client a
                  LEFT JOIN clientSubstanceAbuse b
                  ON a.PersonalID=b.PersonalID
                  "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">client</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">client</span><span class="p">)</span><span class="w">
  
  </span><span class="n">client</span><span class="w">
</span><span class="p">}</span><span class="w">


</span><span class="n">makeDisabilityTypeReadable</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">disabilities</span><span class="p">){</span><span class="w">
  </span><span class="c1"># From HMIS CSV Programming Specifications 5.1</span><span class="w">
  </span><span class="c1"># 5 Physical disability</span><span class="w">
  </span><span class="c1"># 6 Developmental disability</span><span class="w">
  </span><span class="c1"># 7 Chronic health condition</span><span class="w">
  </span><span class="c1"># 8 HIV/AIDS</span><span class="w">
  </span><span class="c1"># 9 Mental health problem</span><span class="w">
  </span><span class="c1"># 10 Substance abuse</span><span class="w">
  </span><span class="n">disabilities</span><span class="o">$</span><span class="n">DisabilityType</span><span class="p">[</span><span class="n">disabilities</span><span class="o">$</span><span class="n">DisabilityType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"5"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Physical disability"</span><span class="w">
  </span><span class="n">disabilities</span><span class="o">$</span><span class="n">DisabilityType</span><span class="p">[</span><span class="n">disabilities</span><span class="o">$</span><span class="n">DisabilityType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"6"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Developmental disability"</span><span class="w">
  </span><span class="n">disabilities</span><span class="o">$</span><span class="n">DisabilityType</span><span class="p">[</span><span class="n">disabilities</span><span class="o">$</span><span class="n">DisabilityType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"7"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"PhysicalChronic health condition"</span><span class="w">
  </span><span class="n">disabilities</span><span class="o">$</span><span class="n">DisabilityType</span><span class="p">[</span><span class="n">disabilities</span><span class="o">$</span><span class="n">DisabilityType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"8"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Chronic health condition"</span><span class="w">
  </span><span class="n">disabilities</span><span class="o">$</span><span class="n">DisabilityType</span><span class="p">[</span><span class="n">disabilities</span><span class="o">$</span><span class="n">DisabilityType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"9"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"HIV/AIDS"</span><span class="w">
  </span><span class="n">disabilities</span><span class="o">$</span><span class="n">DisabilityType</span><span class="p">[</span><span class="n">disabilities</span><span class="o">$</span><span class="n">DisabilityType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"10"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Substance abuse"</span><span class="w">
  </span><span class="n">disabilities</span><span class="w">  
</span><span class="p">}</span><span class="w">

</span><span class="n">makeTrackingMethodReadable</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">df</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  </span><span class="n">df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *, ProjectType as 'ReadableTrackingMethod' FROM df"</span><span class="p">)</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"0"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Entry/Exit Date"</span><span class="w">
  </span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="p">[</span><span class="n">df</span><span class="o">$</span><span class="n">ReadableProjectType</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"3"</span><span class="p">]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"Night-by-Night"</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="c1"># activeRecords &lt;- activeFilter(df, "occStartDate", "occEndDate", "2017-01-23", '2017-01-26')</span><span class="w">
</span><span class="n">activeFilter</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">dateVector1</span><span class="p">,</span><span class="w"> </span><span class="n">dateVector2</span><span class="p">,</span><span class="w"> </span><span class="n">beginRange</span><span class="p">,</span><span class="w"> </span><span class="n">endRange</span><span class="p">){</span><span class="w">
  </span><span class="n">df</span><span class="p">[</span><span class="nf">is.na</span><span class="p">(</span><span class="n">df</span><span class="p">)]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">""</span><span class="w">
  </span><span class="n">df</span><span class="p">[</span><span class="n">dateVector1</span><span class="p">,]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.character</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="n">dateVector1</span><span class="p">,])</span><span class="w">
  </span><span class="n">df</span><span class="p">[</span><span class="n">dateVector2</span><span class="p">,]</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.character</span><span class="p">(</span><span class="n">df</span><span class="p">[</span><span class="n">dateVector2</span><span class="p">,])</span><span class="w">
  </span><span class="n">str</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="s2">"SELECT * FROM df WHERE ("</span><span class="p">,</span><span class="w"> </span><span class="n">dateVector1</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt; '"</span><span class="p">,</span><span class="w"> </span><span class="n">endRange</span><span class="p">,</span><span class="w"> </span><span class="s2">"' AND "</span><span class="p">,</span><span class="w"> </span><span class="n">dateVector2</span><span class="p">,</span><span class="w"> </span><span class="s2">" = '') OR ("</span><span class="p">,</span><span class="w"> </span><span class="n">dateVector1</span><span class="p">,</span><span class="w"> </span><span class="s2">"&lt; '"</span><span class="p">,</span><span class="w"> </span><span class="n">endRange</span><span class="p">,</span><span class="w"> </span><span class="s2">"' AND "</span><span class="p">,</span><span class="w"> </span><span class="n">dateVector2</span><span class="p">,</span><span class="w"> </span><span class="s2">" &gt; '"</span><span class="p">,</span><span class="w"> </span><span class="n">beginRange</span><span class="p">,</span><span class="w"> </span><span class="s2">"')"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w">
  </span><span class="n">sqldf</span><span class="p">(</span><span class="n">str</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="c1"># Get active Enrollments</span><span class="w">
</span><span class="n">getActiveHudEnrollments</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">enrollment</span><span class="p">,</span><span class="w"> </span><span class="n">exit</span><span class="p">,</span><span class="w"> </span><span class="n">project</span><span class="p">){</span><span class="w">
  </span><span class="n">project</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">makeProjectTypeReadable</span><span class="p">(</span><span class="n">project</span><span class="p">)</span><span class="w">
  
  </span><span class="n">project</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">project</span><span class="p">)</span><span class="w">
  
  </span><span class="n">activeEnrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *
                            FROM enrollment a
                            LEFT JOIN exit b
                            ON a.ProjectEntryID=b.ProjectEntryID
                            WHERE b.ProjectEntryID IS NULL"</span><span class="p">)</span><span class="w">
  
  
  </span><span class="n">activeEnrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">activeEnrollment</span><span class="p">)</span><span class="w">
  
  </span><span class="n">activeEnrollmentsWithProjectInfo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT b.ProjectType, b.ReadableProjectType, b.ProjectID, b.ProjectName, a.*
                                            FROM activeEnrollment a
                                            INNER JOIN project b
                                            ON a.ProjectID=b.ProjectID
                                            "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">activeEnrollmentsWithProjectInfo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">activeEnrollmentsWithProjectInfo</span><span class="p">)</span><span class="w">
  </span><span class="n">activeEnrollmentsWithProjectInfo</span><span class="w">
</span><span class="p">}</span><span class="w">


</span><span class="n">addProjectInfoToEnrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">enrollment</span><span class="p">,</span><span class="w"> </span><span class="n">project</span><span class="p">){</span><span class="w">
  </span><span class="n">project</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">makeProjectTypeReadable</span><span class="p">(</span><span class="n">project</span><span class="p">)</span><span class="w">
  </span><span class="n">enrollmentsWithProjectInfo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.ProjectType, b.ReadableProjectType, b.ProjectName, b.TrackingMethod
                                            FROM enrollment a
                                            INNER JOIN project b
                                            ON a.ProjectID=b.ProjectID
                                            "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">enrollmentsWithProjectInfo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">enrollmentsWithProjectInfo</span><span class="p">)</span><span class="w">
  </span><span class="n">enrollmentsWithProjectInfo</span><span class="w">
</span><span class="p">}</span><span class="w">


</span><span class="n">getMostRecentRecordsPerId</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">df</span><span class="p">,</span><span class="w"> </span><span class="n">idHeader</span><span class="p">,</span><span class="w"> </span><span class="n">dateHeader</span><span class="p">){</span><span class="w">
  </span><span class="n">str</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="s2">"SELECT *, MAX("</span><span class="p">,</span><span class="w"> </span><span class="n">dateHeader</span><span class="p">,</span><span class="w"> </span><span class="s2">"), 'Yes' As Max"</span><span class="p">,</span><span class="w"> </span><span class="n">dateHeader</span><span class="p">,</span><span class="w"> </span><span class="s2">" FROM df GROUP BY "</span><span class="p">,</span><span class="w"> </span><span class="n">idHeader</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w">
  </span><span class="n">bfr</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="n">str</span><span class="p">)</span><span class="w">
  </span><span class="n">sqldf</span><span class="p">(</span><span class="n">str</span><span class="p">)</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">getClientsInPH</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">enrollment</span><span class="p">,</span><span class="w"> </span><span class="n">exit</span><span class="p">,</span><span class="w"> </span><span class="n">project</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  
  </span><span class="c1">### START ###</span><span class="w">
  </span><span class="c1">#############################################</span><span class="w">
  </span><span class="c1">##### Active in PH Projects #################</span><span class="w">
  </span><span class="c1">############## Incomplete ###################</span><span class="w">
  </span><span class="c1">#############################################</span><span class="w">
  
  </span><span class="n">project</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">makeProjectTypeReadable</span><span class="p">(</span><span class="n">project</span><span class="p">)</span><span class="w">
  
  </span><span class="n">project</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">project</span><span class="p">)</span><span class="w">
  
  </span><span class="n">activeEnrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *
                            FROM enrollment a 
                            LEFT JOIN exit b
                            ON a.ProjectEntryID=b.ProjectEntryID
                            WHERE b.ProjectEntryID IS NULL"</span><span class="p">)</span><span class="w">
  
  
  </span><span class="n">activeEnrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">activeEnrollment</span><span class="p">)</span><span class="w">
  
  </span><span class="n">activeEnrollmentsWithProjectInfo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT b.ProjectType, b.ReadableProjectType, b.ProjectID, b.ProjectName, a.*
                                            FROM activeEnrollment a
                                            INNER JOIN project b
                                            ON a.ProjectID=b.ProjectID
                                            "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">activeEnrollmentsWithProjectInfo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">activeEnrollmentsWithProjectInfo</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># PSH = 3</span><span class="w">
  </span><span class="c1"># RRH = 13</span><span class="w">
  </span><span class="n">clientsActiveInPh</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT PersonalID, 'Yes' As 'ActiveInPH'
                             FROM activeEnrollmentsWithProjectInfo
                             WHERE ProjectType = 3
                             OR ProjectType = 13
                             "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">clientsActiveInPh</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">clientsActiveInPh</span><span class="p">)</span><span class="w">
  </span><span class="n">clientsActiveInPh</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">getClientsInPHWithinRange</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">enrollment</span><span class="p">,</span><span class="w"> </span><span class="n">exit</span><span class="p">,</span><span class="w"> </span><span class="n">project</span><span class="p">,</span><span class="w"> </span><span class="n">beginDate</span><span class="p">,</span><span class="w"> </span><span class="n">endDate</span><span class="p">)</span><span class="w"> </span><span class="p">{</span><span class="w">
  
  </span><span class="n">enrollment</span><span class="o">$</span><span class="n">EntryDate</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.character</span><span class="p">(</span><span class="n">enrollment</span><span class="o">$</span><span class="n">EntryDate</span><span class="p">)</span><span class="w">
  </span><span class="n">exit</span><span class="o">$</span><span class="n">ExitDate</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="nf">as.character</span><span class="p">(</span><span class="n">exit</span><span class="o">$</span><span class="n">ExitDate</span><span class="p">)</span><span class="w">
  
  </span><span class="n">project</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">makeProjectTypeReadable</span><span class="p">(</span><span class="n">project</span><span class="p">)</span><span class="w">
  
  </span><span class="n">project</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">project</span><span class="p">)</span><span class="w">
  
  </span><span class="n">enrollmentWithProjectInfo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT b.ProjectType, b.ReadableProjectType, b.ProjectID, b.ProjectName, a.*
                                     FROM enrollment a
                                     INNER JOIN project b
                                     ON a.ProjectID=b.ProjectID
                                     "</span><span class="p">)</span><span class="w">

  </span><span class="n">enrollmentWithProjectInfo</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">enrollmentWithProjectInfo</span><span class="p">)</span><span class="w">
  
  </span><span class="n">str</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="s2">"SELECT * FROM enrollmentWithProjectInfo WHERE (ProjectType = 3 OR ProjectType = 13) AND EntryDate &lt; '"</span><span class="p">,</span><span class="w"> </span><span class="n">beginDate</span><span class="p">,</span><span class="w"> </span><span class="s2">"'"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w">
  
  </span><span class="n">phEnrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="n">str</span><span class="p">)</span><span class="w">

  </span><span class="n">str2</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="s2">"SELECT * FROM exit WHERE ExitDate &lt; '"</span><span class="p">,</span><span class="w"> </span><span class="n">endDate</span><span class="p">,</span><span class="w"> </span><span class="s2">"'"</span><span class="p">,</span><span class="w"> </span><span class="n">sep</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span><span class="w">
  </span><span class="n">relevantExit</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="n">str2</span><span class="p">)</span><span class="w">

  </span><span class="n">activeEnrollment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *
                            FROM phEnrollment a
                            LEFT JOIN relevantExit b
                            ON a.ProjectEntryID=b.ProjectEntryID
                            WHERE b.ProjectEntryID IS NULL"</span><span class="p">)</span><span class="w">

  </span><span class="c1">######################################################################</span><span class="w">
  </span><span class="c1">######################################################################</span><span class="w">
  </span><span class="c1">######################################################################</span><span class="w">
  </span><span class="c1">###################### Left off Here #################################</span><span class="w">
  </span><span class="c1">######################################################################</span><span class="w">
  </span><span class="c1">######################################################################</span><span class="w">
  </span><span class="c1">######################################################################</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">getWeeksBetween</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">beginDate</span><span class="p">,</span><span class="w"> </span><span class="n">endDate</span><span class="p">){</span><span class="w">
  </span><span class="n">difftime</span><span class="p">(</span><span class="n">strptime</span><span class="p">(</span><span class="n">endDate</span><span class="p">,</span><span class="w"> </span><span class="n">format</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"%Y-%m-%d"</span><span class="p">),</span><span class="w"> </span><span class="n">strptime</span><span class="p">(</span><span class="n">beginDate</span><span class="p">,</span><span class="w"> </span><span class="n">format</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"%Y-%m-%d"</span><span class="p">),</span><span class="w"> </span><span class="n">units</span><span class="o">=</span><span class="s2">"weeks"</span><span class="p">)</span><span class="w"> 
</span><span class="p">}</span><span class="w">

</span><span class="n">getMonthsBetween</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">beginDate</span><span class="p">,</span><span class="w"> </span><span class="n">endDate</span><span class="p">){</span><span class="w">
  </span><span class="p">(</span><span class="n">as.yearmon</span><span class="p">(</span><span class="n">strptime</span><span class="p">(</span><span class="n">endDate</span><span class="p">,</span><span class="w"> </span><span class="n">format</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"%Y-%m-%d"</span><span class="p">))</span><span class="o">-</span><span class="w">
     </span><span class="n">as.yearmon</span><span class="p">(</span><span class="n">strptime</span><span class="p">(</span><span class="n">beginDate</span><span class="p">,</span><span class="w"> </span><span class="n">format</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"%Y-%m-%d"</span><span class="p">)))</span><span class="o">*</span><span class="m">12</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">getQuartersBetween</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">beginDate</span><span class="p">,</span><span class="w"> </span><span class="n">endDate</span><span class="p">){</span><span class="w">
  </span><span class="p">(</span><span class="n">as.yearqtr</span><span class="p">(</span><span class="n">strptime</span><span class="p">(</span><span class="n">endDate</span><span class="p">,</span><span class="w"> </span><span class="n">format</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"%Y-%m-%d"</span><span class="p">))</span><span class="o">-</span><span class="w">
     </span><span class="n">as.yearqtr</span><span class="p">(</span><span class="n">strptime</span><span class="p">(</span><span class="n">beginDate</span><span class="p">,</span><span class="w"> </span><span class="n">format</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"%Y-%m-%d"</span><span class="p">)))</span><span class="o">*</span><span class="m">4</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">getYearsBetween</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">beginDate</span><span class="p">,</span><span class="w"> </span><span class="n">endDate</span><span class="p">){</span><span class="w">
  </span><span class="p">(</span><span class="n">as.yearmon</span><span class="p">(</span><span class="n">strptime</span><span class="p">(</span><span class="n">endDate</span><span class="p">,</span><span class="w"> </span><span class="n">format</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"%Y-%m-%d"</span><span class="p">))</span><span class="o">-</span><span class="w">
     </span><span class="n">as.yearmon</span><span class="p">(</span><span class="n">strptime</span><span class="p">(</span><span class="n">beginDate</span><span class="p">,</span><span class="w"> </span><span class="n">format</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"%Y-%m-%d"</span><span class="p">)))</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="n">addChronicallyHomelessFlagToClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="k">function</span><span class="p">(</span><span class="n">client</span><span class="p">,</span><span class="w"> </span><span class="n">enrollment</span><span class="p">){</span><span class="w">
  </span><span class="c1">#############################################</span><span class="w">
  </span><span class="c1">##### Get those with Disabling Condition ###</span><span class="w">
  </span><span class="c1">#############################################</span><span class="w">
  </span><span class="n">enrolledWithDisability</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *
                              FROM enrollment
                              WHERE DisablingCondition = 1"</span><span class="p">)</span><span class="w">
  
  </span><span class="c1">#############################################</span><span class="w">
  </span><span class="c1">##### Length-of-Stay ########################</span><span class="w">
  </span><span class="c1">#############################################</span><span class="w">
  </span><span class="c1"># Participants who meet the length-of-stay in homelessness requirement</span><span class="w">
  </span><span class="c1"># Either through four or more occurences with cumulative duration exceeding a year</span><span class="w">
  </span><span class="c1"># Or a consequtive year.</span><span class="w">
  </span><span class="c1">#                 113 = "12 Months"</span><span class="w">
  </span><span class="c1">#                 114 = "More than 12 Months"</span><span class="w">
  </span><span class="n">chronicityDf</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT *
                        FROM enrolledWithDisability
                        WHERE (TimesHomelessPastThreeYears = 4
                          AND (
                            MonthsHomelessPastThreeYears = 113
                            OR MonthsHomelessPastThreeYears = 114)
                          )
                            OR (CAST(JULIANDAY('now') - JULIANDAY(DateToStreetESSH) AS Integer) &gt; 364
                            AND (DateToStreetESSH != '')
                          )
                        "</span><span class="p">)</span><span class="w">
  
  </span><span class="c1">#############################################</span><span class="w">
  </span><span class="c1">##### Chronically Homeless ##################</span><span class="w">
  </span><span class="c1">#############################################</span><span class="w">
  </span><span class="c1"># Take the distinct PersonalIDs of individuals who meet both chronicity</span><span class="w">
  </span><span class="c1"># and disabling condition.</span><span class="w">
  
  </span><span class="n">chClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT DISTINCT(PersonalID), 'Yes' As 'ChronicallyHomeless'
                        FROM chronicityDf
                        "</span><span class="p">)</span><span class="w">
  
  </span><span class="c1"># Get client info for chronically homeless.</span><span class="w">
  </span><span class="n">chClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sqldf</span><span class="p">(</span><span class="s2">"SELECT a.*, b.'ChronicallyHomeless'
                    FROM client a
                    LEFT JOIN chClient b
                    ON a.PersonalID=b.PersonalID
                    "</span><span class="p">)</span><span class="w">
  
  </span><span class="n">chClient</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">subset</span><span class="p">(</span><span class="n">chClient</span><span class="p">)</span><span class="w">
  
  </span><span class="n">chClient</span><span class="w">
</span><span class="p">}</span></code></pre></figure>
:ET