I"É+<h2 id="logging-in-to-eto">Logging in to ETO</h2>

<p>This code base has become a bit of a pet project. ¬†It uses <a href="https://github.com/Alamofire/Alamofire">Alamofire</a>¬†to create GET and POST requests against <a href="https://services.etosoftware.com/">Efforts to Outcomes REST API.</a>¬† This enables native applications to interact with our Homeless Management Information System (<a href="https://www.hudexchange.info/programs/hmis/">HMIS</a>) database. ¬†I‚Äôve been coding it to practice the craft. ¬†Also, there are a few operations in our <a href="https://www.hudexchange.info/programs/coc/">continuum of care</a> which could be improved by creating native applications, as opposed to using webapplications. ¬†For example, street outreach teams are often without their computer, given the bulk. ¬†But rarely is a street outreach specialist without a mobile device. ¬†This would allow the outreach specialist to access all data regardless of physical settings.</p>

<p>Identified benefits¬†from native applications:</p>

<ul>
  <li>Self check in at shelters</li>
  <li>Using TouchPoint responses instead of Points-of-Service for data activities, such as shelter check-in.</li>
  <li>Street outreach</li>
  <li>Leveraging existing hardware (most staff have smartphones)</li>
  <li>User friendly UIs</li>
  <li>Data aggregation through automated queries</li>
  <li>Point-in-Time Count mobile-device¬†survey</li>
  <li>Collecting¬†GPS coordinates of street outreach and point-and-time activities</li>
</ul>

<p>This will be a documentation journal, given the project will most likely evolve to be bigger than my organic memory could manage.</p>

<h3 id="login">Login()</h3>

<p>Setting up a session which is authorized to request information from an ETO databse has several steps. ¬†The first, being the user has an actual account with the database¬†</p>

<ol>
  <li>Take username, password, and webservice URL and make POST request.</li>
  <li>Async-wait for response</li>
  <li>Unwrap response data.</li>
  <li>If POST request returned 200-299, request was success. If failed, handle.</li>
  <li>When successful, convert the return JSON data. ¬†If failed, handle.</li>
  <li>Pull SSOAuthToken from JSON data.</li>
  <li>If it was found in JSON data, call GetListOfEntperises() passing SSOAuthToken</li>
  <li>Async-wait returned list of Enterprises.</li>
  <li>Call completion callback meothd with parameter ‚ÄúSuccess‚Äù</li>
</ol>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="c1">//</span>
<span class="c1">//  ETOWebServiceLogin.swift</span>
<span class="c1">//  ETO-TouchPoint-Test</span>
<span class="c1">//</span>
<span class="c1">//  Created by Thomas Ladvien on 10/13/16.</span>
<span class="c1">//  Copyright ¬© 2016 Honeysuckle Hardware. All rights reserved.</span>
<span class="c1">//</span>

<span class="kd">import</span> <span class="kt">Foundation</span>
<span class="kd">import</span> <span class="kt">Alamofire</span>
<span class="kd">import</span> <span class="kt">SwiftyJSON</span>

<span class="kd">public</span> <span class="kd">func</span> <span class="nf">login</span><span class="p">(</span><span class="nv">currentSessionInfo</span><span class="p">:</span> <span class="kt">SessionInfo</span><span class="p">,</span> <span class="nv">username</span><span class="p">:</span> <span class="kt">String</span><span class="p">,</span> <span class="nv">password</span><span class="p">:</span> <span class="kt">String</span><span class="p">,</span> <span class="nv">completion</span><span class="p">:</span> <span class="kd">@escaping</span> <span class="p">(</span><span class="n">_</span> <span class="nv">response</span><span class="p">:</span> <span class="kt">ReturnInfoWithString</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="kt">Void</span><span class="p">){</span>

        <span class="c1">// ETO Authentication Web Service.</span>
        <span class="k">let</span> <span class="nv">SSOAuthenticateService</span> <span class="o">=</span> <span class="s">"https://services.etosoftware.com/API/Security.svc/SSOAuthenticate/"</span>

        <span class="k">let</span> <span class="nv">parameters</span><span class="p">:</span> <span class="kt">Parameters</span> <span class="o">=</span> <span class="p">[</span>
            <span class="s">"security"</span><span class="p">:</span> <span class="p">[</span>
                <span class="s">"Email"</span><span class="p">:</span> <span class="n">username</span><span class="p">,</span>
                <span class="s">"Password"</span><span class="p">:</span> <span class="n">password</span><span class="p">,</span>
            <span class="p">]</span>
        <span class="p">];</span>

        <span class="k">var</span> <span class="nv">returnInfo</span> <span class="o">=</span> <span class="kt">ReturnInfoWithString</span><span class="p">()</span>

        <span class="c1">// TODO: Check for HTTP response code.</span>
        <span class="k">let</span> <span class="nv">request</span> <span class="o">=</span> <span class="kt">Alamofire</span><span class="o">.</span><span class="nf">request</span><span class="p">(</span><span class="kt">SSOAuthenticateService</span><span class="p">,</span> <span class="nv">method</span><span class="p">:</span> <span class="o">.</span><span class="n">post</span><span class="p">,</span> <span class="nv">parameters</span><span class="p">:</span> <span class="n">parameters</span><span class="p">,</span> <span class="nv">encoding</span><span class="p">:</span> <span class="kt">JSONEncoding</span><span class="o">.</span><span class="k">default</span><span class="p">)</span><span class="o">.</span><span class="nf">validate</span><span class="p">()</span><span class="o">.</span><span class="n">responseData</span> <span class="p">{</span> <span class="n">response</span> <span class="k">in</span>
            <span class="k">if</span> <span class="k">let</span> <span class="nv">data</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">data</span> <span class="p">{</span>

                <span class="k">switch</span> <span class="n">response</span><span class="o">.</span><span class="n">result</span> <span class="p">{</span>
                <span class="k">case</span> <span class="o">.</span><span class="nv">success</span><span class="p">:</span>
                    <span class="k">let</span> <span class="nv">json</span> <span class="o">=</span> <span class="kt">JSON</span><span class="p">(</span><span class="nv">data</span><span class="p">:</span> <span class="n">data</span><span class="p">)</span>
                    <span class="n">returnInfo</span><span class="o">.</span><span class="n">value</span> <span class="o">=</span> <span class="n">json</span><span class="p">[</span><span class="s">"SSOAuthenticateResult"</span><span class="p">][</span><span class="s">"SSOAuthToken"</span><span class="p">]</span><span class="o">.</span><span class="n">stringValue</span>
                    <span class="k">if</span> <span class="p">(</span><span class="s">"00000000-0000-0000-0000-000000000000"</span> <span class="o">!=</span> <span class="n">returnInfo</span><span class="o">.</span><span class="n">value</span><span class="p">)</span> <span class="p">{</span>
                        <span class="n">returnInfo</span><span class="o">.</span><span class="n">callback</span> <span class="o">=</span> <span class="k">self</span><span class="o">.</span><span class="nf">prepareResponse</span><span class="p">(</span><span class="nv">targetResponse</span><span class="p">:</span> <span class="o">.</span><span class="kt">Success</span><span class="p">)</span>
                        <span class="n">currentSessionInfo</span><span class="o">.</span><span class="kt">SSOAuthToken</span> <span class="o">=</span> <span class="n">returnInfo</span><span class="o">.</span><span class="n">value</span>
                        <span class="nf">completion</span><span class="p">(</span><span class="n">returnInfo</span><span class="p">)</span>
                    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                        <span class="n">returnInfo</span><span class="o">.</span><span class="n">callback</span> <span class="o">=</span> <span class="k">self</span><span class="o">.</span><span class="nf">prepareResponse</span><span class="p">(</span><span class="nv">targetResponse</span><span class="p">:</span> <span class="o">.</span><span class="kt">NoSSOAuthToken</span><span class="p">)</span>
                        <span class="nf">completion</span><span class="p">(</span><span class="n">returnInfo</span><span class="p">)</span>
                    <span class="p">}</span>
                <span class="k">case</span> <span class="o">.</span><span class="nv">failure</span><span class="p">:</span>
                    <span class="n">returnInfo</span><span class="o">.</span><span class="n">callback</span> <span class="o">=</span> <span class="k">self</span><span class="o">.</span><span class="nf">prepareResponse</span><span class="p">(</span><span class="nv">targetResponse</span><span class="p">:</span> <span class="o">.</span><span class="kt">HTTPRequestFail</span><span class="p">)</span>
                    <span class="nf">completion</span><span class="p">(</span><span class="n">returnInfo</span><span class="p">)</span>
                <span class="p">}</span>

            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="n">returnInfo</span><span class="o">.</span><span class="n">callback</span> <span class="o">=</span> <span class="k">self</span><span class="o">.</span><span class="nf">prepareResponse</span><span class="p">(</span><span class="nv">targetResponse</span><span class="p">:</span> <span class="o">.</span><span class="kt">UnknownFailure</span><span class="p">)</span>
                <span class="nf">completion</span><span class="p">(</span><span class="n">returnInfo</span><span class="p">)</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="kt">DebugMode</span><span class="p">){</span>
            <span class="nf">debugPrint</span><span class="p">(</span><span class="n">request</span><span class="p">)</span>
        <span class="p">}</span>
    <span class="p">}</span></code></pre></figure>

<p>Ok, let me break down steps in this function.</p>

<ol>
  <li>Take username, password, and webservice URL and make POST request.</li>
  <li>Async-wait for response</li>
  <li>Unwrap response data.</li>
  <li>If POST request returned 200-299, request was success. If failed, handle.</li>
  <li>When successful, convert the return JSON data. ¬†If failed, handle.</li>
  <li>Pull SSOAuthToken from JSON data.</li>
  <li>If it was found in JSON data, call GetListOfEntperises() passing SSOAuthToken</li>
  <li>Async-wait returned list of Enterprises.</li>
  <li>Call completion callback meothd with parameter ‚ÄúSuccess‚Äù</li>
</ol>
:ET