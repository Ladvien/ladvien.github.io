I"{
<p>Originally posted on <a href="www.letsmakerobots.com">www.letsmakerobots.com</a></p>

<p>This is a short note on how to setup a C programming environment for the FTDI chip in bit banging mode, since that’s what I had difficulty doing.</p>

<p>There may be easier ways to go about this, but I wanted to use GCC to compile a small C program to control the 8 IOs.  The purpose was to write a small command-line program that would reset my LPC1114 before and after programming.</p>

<p>To setup the environment:</p>

<p>1. I downloaded and setup <a href="http://www.mingw.org/wiki/HOWTO_Install_the_MinGW_GCC_Compiler_Suite">MinGW32</a>.</p>

<p>2. I then downloaded <a href="http://www.ftdichip.com/Drivers/D2XX.htm">FTD2XX libraries</a>.  <strong>This included the ftd2xx.h file and ftd2xx.lib</strong>.</p>

<p>3. I then stole the test code from Hack-a-Day’s article on <a href="http://hackaday.com/2009/09/22/introduction-to-ftdi-bitbang-mode/">bitbanging with the FTDI</a>.</p>

<p>4. I modified the code as they suggested by including, in this order, the Windows compatibility files:</p>

<figure class="highlight"><pre><code class="language-c" data-lang="c"><span class="cp">#include &lt;stdio.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;windows.h&gt;
#include &lt;windef.h&gt;
#include &lt;winnt.h&gt;
#include &lt;winbase.h&gt;
#include &lt;string.h&gt;
#include &lt;math.h&gt;
#include "ftd2xx.h"</span></code></pre></figure>

<p>5. I then used the rest of their code as a base: <a href="https://github.com/Ladvien/FTDI_Bitbangin_GCC/blob/master/ftdi_Test.c">Hack-a-Day’s FTDI PWM Code</a></p>

<p>I used this line to build it:</p>

<p><strong>$ gcc -o ftdi_PWM ftdi_Test.c -L./ -lftd2xx</strong></p>

<p>You must have both the ftd2xx.h and ftd2xx.lib in the same directory as you attempt to build.</p>

<p>6. I then wrote two programs, one to send DTR and CTS high and low in order to reset the LPC1114 into <strong>programming mode. ** Second, to send DTR and CTS high and low in order to send the LPC1114 into **run program mode.</strong>  The idea being, I could use the typical <a href="https://www.sparkfun.com/search/results?term=ftdi">Sparkfun FTDI programmer</a> to program my <a href="http://letsmakerobots.com/content/lpc1114-setup-bare-metal-arm">LPC1114</a>.</p>

<ol>
  <li><a href="https://github.com/Ladvien/FTDI_Bitbangin_GCC/blob/master/LPC1114_reset_to_program.c">LPC1114_reset_to_program</a></li>
  <li><a href="https://github.com/Ladvien/FTDI_Bitbangin_GCC/blob/master/LPC1114_reset_to_bootloader.c">LPC1114_reset_to_bootloader</a></li>
</ol>

<p>That’s it.  Just wanted to make sure this was out in the universe for the next guy’s sake.</p>
:ET