I"F@<p>Originally posted on <a href="www.letsmakerobots.com">www.letsmakerobots.com</a></p>

<p><strong>Nostalgia</strong></p>

<p>I wanted to post this simply because it working on it brought my a dry nostalgic joy.  When I was young, 8-9, my parents got a old computer.  All I remember was its screen was orange and black; having a <a href="http://en.wikipedia.org/wiki/Hercules_Graphics_Card">Hercules graphics card</a>.  I quickly learned to get around from the command prompt.  But I was always thrilled to run into menu driven program.  It was like going to a fancy restaurant of abstractness.  Anyway, when I wanted my code to slow down a bit and branch directions based upon user input, a command menu was a natural choice.</p>

<p><strong>A Break from the LPC1114 Uploader</strong></p>

<p>I thought I’d take some time away from coding my <a href="http://letsmakerobots.com/lpc1114-usb-serial-solution-rerolling-boot-uploader">LPC1114 Uploader</a> and verbally process a few things I’ve learned.  As always, feel free to critique any of it; it’ll only serve to make my code more robust in the end.</p>

<p>This post will be a series of post leading up to the large post I’ll make on writing the uploader.  All posts will rely on the GCC compiler.</p>

<p><img src="../images/GCCLogo.png" alt="" />Setting Up the GCC Compiler</p>

<p>I setup a C environment as basic I could.  There may be easier ways to go about this, but I wanted to use GCC to compile.</p>

<p>To setup the environment:</p>

<p>1. I downloaded and setup <a href="http://www.mingw.org/wiki/HOWTO_Install_the_MinGW_GCC_Compiler_Suite">MinGW32</a>.</p>

<p>2. I added these <strong>includes</strong> to make the code go.</p>

<figure class="highlight"><pre><code class="language-c" data-lang="c"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
</pre></td><td class="code"><pre><span class="cp">#include &lt;stdio.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;windows.h&gt;
#include &lt;windef.h&gt;
#include &lt;winnt.h&gt;
#include &lt;winbase.h&gt;
#include &lt;string.h&gt;
#include &lt;math.h&gt;
#include &lt;stdbool.h&gt;
#include &lt;stdint.h&gt;
#include &lt;sys/time.h&gt;</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>I used this line to build it:</p>

<p><strong>$ gcc -o main main.c</strong></p>

<p>As for editing, I’ve really grown to love <a href="http://www.sublimetext.com/2">Sublime Text 2</a>.</p>

<p>If you have issues<strong>, make sure directory containing your files is in your PATH environment variable</strong> (I go over how to add the directory to your environment variables in this <a href="http://letsmakerobots.com/content/lpc1114-setup-bare-metal-arm">post</a>).</p>

<p><img src="../images/Command_line_menu.png" alt="" /></p>

<p><strong>How to Write a Command Line Menu</strong></p>

<p>There really isn’t much to the code here.  Basically, it it prints out the options you want your user to know.  Then, it starts a do-while loop until the user selects an appropriate number.</p>

<p>Hmm.  <strong>Not really much to it, not sure it deserves its own post.  But what the hell.</strong></p>

<figure class="highlight"><pre><code class="language-c" data-lang="c"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
</pre></td><td class="code"><pre><span class="kt">void</span> <span class="nf">main_menu</span><span class="p">()</span>
<span class="p">{</span>
	<span class="kt">char</span> <span class="n">char_choice</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span>
	<span class="kt">int</span> <span class="n">int_choice</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

	<span class="k">do</span>
	<span class="p">{</span>
		<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
		<span class="n">startScreen</span><span class="p">();</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"Vorpal Hoff -- Main Menu: </span><span class="se">\n\n</span><span class="s">"</span><span class="p">);</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"1. Quick Connect</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"2. FTDI Menu</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"3. Open HM-1X Menu</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"4. Connect LPC</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"5. Program Chip</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"6. Erase LPC</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"7. Decode UUE debug file</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"8. Parse hex-file and write to debug.hex</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"9. Exit</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>

		<span class="n">scanf</span><span class="p">(</span><span class="s">"%s"</span><span class="p">,</span> <span class="n">char_choice</span><span class="p">);</span>
		<span class="n">int_choice</span> <span class="o">=</span> <span class="n">atoi</span><span class="p">(</span><span class="n">char_choice</span><span class="p">);</span>

		<span class="k">switch</span> <span class="p">(</span><span class="n">int_choice</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">case</span> <span class="mi">1</span><span class="p">:</span>
				<span class="n">quick_connect</span><span class="p">();</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="mi">2</span><span class="p">:</span>
				<span class="n">ftdi_menu</span><span class="p">();</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="mi">3</span><span class="p">:</span>
                                <span class="n">HM_1X_main_menu</span><span class="p">();</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="mi">4</span><span class="p">:</span>
				<span class="c1">// Not yet used.</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="mi">5</span><span class="p">:</span>
				<span class="n">program_chip</span><span class="p">(</span><span class="n">file_name</span><span class="p">);</span>
			        <span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="mi">6</span><span class="p">:</span>
				<span class="c1">// Not yet used.</span>
			       <span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="mi">8</span><span class="p">:</span>
				<span class="n">debug_hex_file</span><span class="p">(</span><span class="n">file_name</span><span class="p">);</span>
			        <span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="mi">9</span><span class="p">:</span>
				<span class="n">shut_down</span><span class="p">();</span>
			        <span class="k">break</span><span class="p">;</span>
			<span class="nl">default:</span><span class="n">printf</span><span class="p">(</span><span class="s">"Wrong choice. Enter Again"</span><span class="p">);</span>
			        <span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="n">int_choice</span> <span class="o">!=</span><span class="mi">99</span><span class="p">);</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>6 and 54: This is the beginning and the end of the <a href="http://en.wikipedia.org/wiki/Do_while_loop">do-while loop</a>.  Basically, the do-while is a fancy loop which says to do everything in the brackets over and over, until the boolean variable is met (line 54).</p>

<p>The do-while loop if the equivalent in effect to the follow code,</p>

<figure class="highlight"><pre><code class="language-c" data-lang="c"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
</pre></td><td class="code"><pre><span class="k">while</span> <span class="p">(</span><span class="nb">true</span><span class="p">)</span> <span class="p">{</span>
   <span class="n">do_work</span><span class="p">();</span>
   <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">condition</span><span class="p">)</span> <span class="k">break</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<ul>
  <li>8: Clears the screen.  This removes the command prompt; giving a clean slate to paint our menu.</li>
  <li>9: I put a function in to paint my menu header.  This allows me easily change the header for a menu.  It also makes the menu code easier to read.</li>
  <li>12-20: We print the menu options for the user.</li>
  <li>22: <a href="http://www.cplusplus.com/reference/cstdio/scanf/">scanf</a> is a tricky command. It pauses and waits for the user to input followed by ‘n’.   It takes a variable respective to the data type you want to get from the user.  Here, we are hoping the user enters one or two numbers.  These are put into the string provided.</li>
  <li>23: We use the <a href="http://www.cplusplus.com/reference/cstdlib/atoi/">atoi</a> function to take a string and turn it into an integer.  This value we store in the integer <strong>int_choice</strong>.</li>
  <li>25: The beginning of the <a href="http://www.tutorialspoint.com/cprogramming/switch_statement_in_c.htm">switch-statement</a> which does the real work for us.  It test the int_choice value you against predefined values (1-9 here).  If the one of the values is equal, it executes the code found there before breaking from the switch-statement.</li>
  <li>51: If a number besides 1-9 is entered the default will be true.  Let’s gripe at the user for selecting a bad number.</li>
</ul>

<p>And that’s it.  You simply put the functions you want to be called in the appropriate values in the switch-statement.  Because of the do-while loop, once a selection has been made and executed, the menu will be displayed again.</p>

<p>You can also make limit a selection to showing by doing something like the following,</p>

<figure class="highlight"><pre><code class="language-c" data-lang="c"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
</pre></td><td class="code"><pre><span class="n">bool</span> <span class="n">connected_flag</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
	<span class="k">do</span>
	<span class="p">{</span>
		<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"FTDI Menu: "</span><span class="p">);</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"1. Quick Connect</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"2. Device List</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">got_list</span> <span class="o">==</span> <span class="nb">true</span><span class="p">)</span> <span class="c1">// Only display option if devices list.</span>
		<span class="p">{</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"3. Connect Device</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
		<span class="p">}</span>

		<span class="n">printf</span><span class="p">(</span><span class="s">"9. Main Menu</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>


		<span class="c1">// Get user choice.</span>
		<span class="n">scanf</span><span class="p">(</span><span class="s">"%s"</span><span class="p">,</span> <span class="n">char_choice</span><span class="p">);</span>

		<span class="c1">// Convert string to int for switch statement.</span>
		<span class="n">int_choice</span> <span class="o">=</span> <span class="n">atoi</span><span class="p">(</span><span class="n">char_choice</span><span class="p">);</span>

		<span class="k">switch</span> <span class="p">(</span><span class="n">int_choice</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">case</span> <span class="mi">1</span><span class="p">:</span>
				<span class="n">quick_connect</span><span class="p">();</span>
				<span class="n">baud_rate</span> <span class="o">=</span> <span class="mi">115200</span><span class="p">;</span>
				<span class="n">connected_flag</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
			<span class="k">case</span> <span class="mi">2</span><span class="p">:</span>
				<span class="n">got_list</span> <span class="o">=</span> <span class="n">get_device_list</span><span class="p">();</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="mi">3</span><span class="p">:</span>
				<span class="k">if</span> <span class="p">(</span><span class="n">got_list</span> <span class="o">==</span> <span class="nb">true</span><span class="p">)</span> <span class="c1">// Only display option if devices listed.</span>
				<span class="p">{</span>
					<span class="n">connected_flag</span> <span class="o">=</span> <span class="n">connect_device</span><span class="p">(</span><span class="o">&amp;</span><span class="n">baud_rate</span><span class="p">);</span>
				<span class="p">}</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="mi">9</span><span class="p">:</span>
				<span class="n">main_menu</span><span class="p">();</span>
			    <span class="k">break</span><span class="p">;</span>
			<span class="nl">default:</span><span class="n">printf</span><span class="p">(</span><span class="s">"""Bad choice. Hot glue!"""</span><span class="p">);</span>
			    <span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="n">int_choice</span> <span class="o">!=</span><span class="mi">99</span><span class="p">);</span>
<span class="err">}</span>
</pre></td></tr></tbody></table></code></pre></figure>

<p>Here, option “3. Connect Device” doesn’t show until option “2. Device List” is run.  On line 34 the connect_device() function sets the connected_flag variable to true if the function was successful.  Then, after the break is hit and the menu is repainted the option “3. Connect Device” will show.  Also, ‘3’ will become a valid user selection.</p>

<p><strong>A Submenu</strong></p>

<p>One last note.  If you want to make a sub-menu, you simply use the same code as above, just take the do-while loop out.  This states you only want the sub-menu to run once, the return to the main menu.</p>
:ET